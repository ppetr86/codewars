swagger: '2.0'
info:
  description: Our api provides access to our cloud services
  version: 2.16-SNAPSHOT
  title: KORONA.cloud API v3
  contact:
    email: support@combase.net
  license:
    name: KORONA.cloud API License
    url: https://support.korona.de/agb/
host: www.koronacloud.com
basePath: /web/api/v3
tags:
  - name: delivery notes
    description: (KORONA.invoicing required)
  - name: inventories
    description: (KORONA.retail required)
  - name: stock adjustments
    description: ''
  - name: stock orders
    description: (KORONA.retail required)
  - name: stock receipts
    description: (KORONA.retail required)
  - name: store orders
    description: ''
  - name: accounts
  - name: additional receipt info types
  - name: assortments
  - name: ticketing
  - name: cashier roles
  - name: cashiers
  - name: cashier verification requirement
  - name: commodity groups
  - name: ticket creation
  - name: currencies
  - name: customer display configurations
  - name: customer groups
  - name: customer orders
  - name: customers
  - name: device configuration variables
  - name: economic zones
  - name: external system calls
  - name: fiscal units
  - name: images
  - name: info texts
  - name: korona account
  - name: organizational units
  - name: payment methods
  - name: pos button layouts
  - name: pos page layout configurations
  - name: pos profiles
  - name: points of sale
  - name: price groups
  - name: products
  - name: production types
  - name: promotions
  - name: receipt layout configurations
  - name: receipts
  - name: sales taxes
  - name: sectors
  - name: special price configurations
  - name: statistics
  - name: suppliers
  - name: tags
  - name: time tracking
  - name: user roles
schemes:
  - https
paths:
  /accounts/{koronaAccountId}/accounts:
    get:
      tags:
        - accounts
      summary: lists all accounts
      description: ''
      operationId: getAccounts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListAccount'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - accounts
      summary: adds a batch of new accounts
      description: ''
      operationId: addAccounts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new accounts
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Account'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - accounts
      summary: deletes a batch of accounts
      description: ''
      operationId: deleteAccounts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing accounts (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Account'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - accounts
      summary: updates a batch of accounts
      description: '[number] must be set in the objects, otherwise the object cannot be updated'
      operationId: updateAccounts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: an array of existing accounts
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Account'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/accounts/{accountId}:
    get:
      tags:
        - accounts
      summary: returns a single account
      description: ''
      operationId: getAccount
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: accountId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Account'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - accounts
      summary: deletes the single account
      description: ''
      operationId: deleteAccount
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: accountId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - accounts
      summary: updates the single account
      description: if [number] is set, the number of the object will change and the resource location as well
      operationId: updateAccount
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: accountId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: the properties to update of the account
          required: true
          schema:
            $ref: '#/definitions/Account'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/additionalReceiptInfoTypes:
    get:
      tags:
        - additional receipt info types
      summary: lists all additional receipt info types
      description: ''
      operationId: getAdditionalReceiptInfoTypes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListAdditionalReceiptInfoType'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/additionalReceiptInfoTypes/{additionalReceiptInfoTypeId}:
    get:
      tags:
        - additional receipt info types
      summary: returns the single additional receipt info type
      description: ''
      operationId: getAdditionalReceiptInfoType
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: additionalReceiptInfoTypeId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AdditionalReceiptInfoType'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/assortments:
    get:
      tags:
        - assortments
      summary: lists all assortments
      description: ''
      operationId: getAssortments
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListAssortment'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - assortments
      summary: adds a batch of new assortments
      description: ''
      operationId: addAssortments
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new assortments
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Assortment'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - assortments
      summary: deletes a batch of assortments
      description: ''
      operationId: deleteAssortments
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing assortments (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Assortment'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - assortments
      summary: updates a batch of assortments
      description: ''
      operationId: updateAssortments
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing assortments (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Assortment'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/assortments/{assortmentId}:
    get:
      tags:
        - assortments
      summary: returns the single assortment
      description: ''
      operationId: getAssortment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: assortmentId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Assortment'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - assortments
      summary: deletes the single assortment
      description: ''
      operationId: deleteAssortment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: assortmentId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - assortments
      summary: updates the single assortment
      description: ''
      operationId: updateAssortment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: assortmentId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: the properties to update of the assortment
          required: true
          schema:
            $ref: '#/definitions/Assortment'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/attendances:
    get:
      tags:
        - ticketing
      summary: lists all attendances
      description: ''
      operationId: getAttendances
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListAttendance'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - ticketing
      summary: updates/adds attendances
      description: ''
      operationId: addOrUpdateAttendances
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: an array of attendances
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Attendance'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/attendances/{attendanceId}:
    get:
      tags:
        - ticketing
      summary: returns the single attendance
      description: ''
      operationId: getAttendance
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: attendanceId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Attendance'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - ticketing
      summary: cancel the attendance
      description: ''
      operationId: cancelAttendance
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: attendanceId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/cashierRoles:
    get:
      tags:
        - cashier roles
      summary: lists all cashier roles
      description: ''
      operationId: getCashierRoles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListCashierRole'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - cashier roles
      summary: adds a batch of new cashier roles
      description: ''
      operationId: addCashierRoles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: an array of new cashier roles
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CashierRole'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - cashier roles
      summary: deletes a batch of cashier roles
      description: ''
      operationId: deleteCashierRoles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing cashier roles (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CashierRole'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - cashier roles
      summary: updates a batch of cashier roles
      description: ''
      operationId: updateCashierRoles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing cashier roles (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CashierRole'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/cashierRoles/{cashierRoleId}:
    get:
      tags:
        - cashier roles
      summary: returns the single cashier role
      description: ''
      operationId: getCashierRole
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: cashierRoleId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CashierRole'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - cashier roles
      summary: deletes the single cashier role
      description: ''
      operationId: deleteCashierRole
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: cashierRoleId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - cashier roles
      summary: updates the single cashier role
      description: ''
      operationId: updateCashierRole
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: cashierRoleId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: the properties to update of the cashier role
          required: true
          schema:
            $ref: '#/definitions/CashierRole'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/cashiers:
    get:
      tags:
        - cashiers
      summary: lists all cashiers
      description: ''
      operationId: getCashiers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: displayCashierCredentials
          in: query
          description: display cashier credentials loginCode and loginPassword as (HASH|PLAIN|NONE)
          required: false
          type: string
          enum:
            - HASH
            - PLAIN
            - NONE
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListCashier'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - cashiers
      summary: adds a batch of new cashiers
      description: ''
      operationId: addCashiers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new cashiers
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Cashier'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - cashiers
      summary: deletes a batch of cashiers
      description: ''
      operationId: deleteCashiers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing cashiers (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Cashier'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - cashiers
      summary: updates a batch of cashiers
      description: '[number] must be set in the objects, otherwise the object cannot be updated'
      operationId: updateCashiers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: an array of existing cashiers
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Cashier'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/cashiers/{cashierId}:
    get:
      tags:
        - cashiers
      summary: returns the single cashier
      description: ''
      operationId: getCashier
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: displayCashierCredentials
          in: query
          description: display cashier credentials loginCode and loginPassword as (HASH|PLAIN|NONE)
          required: false
          type: string
          enum:
            - HASH
            - PLAIN
            - NONE
        - name: cashierId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Cashier'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - cashiers
      summary: deletes the single cashier
      description: ''
      operationId: deleteCashier
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: cashierId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - cashiers
      summary: updates the single cashier
      description: if [number] is set, the number of the object will change and the resource location as well
      operationId: updateCashier
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: cashierId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: the properties to update of the cashier
          required: true
          schema:
            $ref: '#/definitions/Cashier'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/cashierVerificationRequirements:
    get:
      tags:
        - cashier verification requirement
      summary: lists all cashier verification requirements
      description: ''
      operationId: getVerificationRequirements
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListCashierVerificationRequirement'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - cashier verification requirement
      summary: adds a batch of new cashier verification requirements
      description: ''
      operationId: addVerificationRequirements
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new cashier verification requirements
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CashierVerificationRequirement'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - cashier verification requirement
      summary: deletes a batch of cashier verification requirements
      description: ''
      operationId: deleteVerificationRequirements
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing cashier verification requirements (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CashierVerificationRequirement'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - cashier verification requirement
      summary: updates a batch of cashier verification requirements
      description: ''
      operationId: updateVerificationRequirements
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing cashier verification requirements (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CashierVerificationRequirement'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/cashierVerificationRequirements/{cashierVerificationRequirementId}:
    get:
      tags:
        - cashier verification requirement
      summary: returns the single cashier verification requirement
      description: ''
      operationId: getVerificationRequirement
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: cashierVerificationRequirementId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CashierVerificationRequirement'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/commodityGroups:
    get:
      tags:
        - commodity groups
      summary: lists all commodity groups
      description: ''
      operationId: getCommodityGroups
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListCommodityGroup'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - commodity groups
      summary: adds a batch of new commodity groups
      description: ''
      operationId: addCommodityGroups
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: an array of new commodity groups
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CommodityGroup'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - commodity groups
      summary: deletes a batch of commodity groups
      description: ''
      operationId: deleteCommodityGroups
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing commodity groups (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CommodityGroup'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - commodity groups
      summary: updates a batch of commodity groups
      description: ''
      operationId: updateCommodityGroups
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing commodity groups (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CommodityGroup'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/commodityGroups/{commodityGroupId}:
    get:
      tags:
        - commodity groups
      summary: returns the single commodity group
      description: ''
      operationId: getCommodityGroup
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: commodityGroupId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CommodityGroup'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - commodity groups
      summary: deletes the single commodity group
      description: ''
      operationId: deleteCommodityGroup
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: commodityGroupId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - commodity groups
      summary: updates the single commodity group
      description: ''
      operationId: updateCommodityGroup
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: commodityGroupId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: the properties to update of the commodity group
          required: true
          schema:
            $ref: '#/definitions/CommodityGroup'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/ticketCreation:
    get:
      tags:
        - ticket creation
      summary: creation tasks, personalization will always be empty for technical reasons
      description: ''
      operationId: getCreationTasks
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: creationTimeFrom
          in: query
          description: creation time from
          required: false
          type: string
          format: date-time
        - name: creationTimeTo
          in: query
          description: creation time to
          required: false
          type: string
          format: date-time
        - name: statuses
          in: query
          description: creation task statuses
          required: false
          type: array
          items:
            type: string
            enum:
              - PREPARED
              - RUNNING
              - FINISHED
              - FAILED
          collectionFormat: multi
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListCreationTask'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - ticket creation
      summary: adds a creation task
      description: ''
      operationId: addCreationTask
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: a single ticket creation task
          required: true
          schema:
            $ref: '#/definitions/CreationTask'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/currencies/{currencyId}:
    get:
      tags:
        - currencies
      summary: returns the single currency
      description: ''
      operationId: getCurrency
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: currencyId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Currency'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/currencies:
    get:
      tags:
        - currencies
      summary: lists all currencies
      description: ''
      operationId: getCurrencies
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListCurrency'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - currencies
      summary: adds a batch of new currencies
      description: ''
      operationId: addCurrencies
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new currencies
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Currency'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - currencies
      summary: deletes a batch of currencies
      description: ''
      operationId: deleteCurrencies
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing currencies (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Currency'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - currencies
      summary: updates a batch of currencies
      description: ''
      operationId: updateCurrencies
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing currencies (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Currency'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/customerDisplayConfigurations:
    get:
      tags:
        - customer display configurations
      summary: lists all customer display configurations
      description: ''
      operationId: getCustomerDisplayConfigurations
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListCustomerDisplayConfiguration'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - customer display configurations
      summary: adds a batch of new customer display configurations
      description: ''
      operationId: addCustomerDisplayConfigurations
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new customer display configurations
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CustomerDisplayConfiguration'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - customer display configurations
      summary: deletes a batch of customer display configurations
      description: ''
      operationId: deleteCustomerDisplayConfigurations
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: an array of existing customer display configurations
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CustomerDisplayConfiguration'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - customer display configurations
      summary: updates a batch of customer display configurations
      description: '[number] must be set in the objects, otherwise the object cannot be updated'
      operationId: updateCustomerDisplayConfigurations
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: an array of existing customer display configurations
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CustomerDisplayConfiguration'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/customerDisplayConfigurations/{customerDisplayConfigurationId}:
    get:
      tags:
        - customer display configurations
      summary: returns the single customer display configuration
      description: ''
      operationId: getCustomerDisplayConfiguration
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: customerDisplayConfigurationId
          in: path
          description: the number of the customer display configuration
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CustomerDisplayConfiguration'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - customer display configurations
      summary: deletes the single customer display configuration
      description: ''
      operationId: deleteCustomerDisplayConfiguration
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: customerDisplayConfigurationId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/customerGroups:
    get:
      tags:
        - customer groups
      summary: lists all customer groups
      description: ''
      operationId: getCustomerGroups
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListCustomerGroup'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - customer groups
      summary: adds a batch of new customer groups
      description: ''
      operationId: addCustomerGroups
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new customer groups
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CustomerGroup'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - customer groups
      summary: deletes a batch of customer groups
      description: ''
      operationId: deleteCustomerGroups
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing customer groups (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CustomerGroup'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - customer groups
      summary: updates a batch of customer groups
      description: '[number] must be set in the objects, otherwise the object cannot be updated'
      operationId: updateCustomerGroups
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: an array of existing customer groups
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CustomerGroup'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/customerGroups/{customerGroupId}:
    get:
      tags:
        - customer groups
      summary: returns the single customer group
      description: ''
      operationId: getCustomerGroup
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: customerGroupId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CustomerGroup'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - customer groups
      summary: deletes the single customer group
      description: ''
      operationId: deleteCustomerGroup
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: customerGroupId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - customer groups
      summary: updates the single customer group
      description: if [number] is set, the number of the object will change and the resource location as well
      operationId: updateCustomerGroup
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: customerGroupId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: the properties to update of the customer group
          required: true
          schema:
            $ref: '#/definitions/CustomerGroup'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/customerOrders:
    get:
      tags:
        - customer orders
      summary: lists all customer orders
      description: ''
      operationId: getCustomerOrders
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: minCreateTime
          in: query
          description: 'min (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxCreateTime
          in: query
          description: 'max (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: minPickUpTime
          in: query
          description: 'min (inclusive) pick up time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxPickUpTime
          in: query
          description: 'max (inclusive) pick up time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: customer
          in: query
          description: customer id to filter by
          required: false
          type: string
        - name: pointOfSale
          in: query
          description: point of sale
          required: false
          type: string
        - name: organizationalUnit
          in: query
          description: organizational unit
          required: false
          type: string
        - name: cashier
          in: query
          description: cashier id to filter by
          required: false
          type: string
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListCustomerOrder'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - customer orders
      summary: adds a batch of new customer orders
      description: ''
      operationId: addCustomerOrders
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of new customer orders
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CustomerOrder'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - customer orders
      summary: updates a batch of customer orders
      description: '[number] must be set in the objects, otherwise the object cannot be updated'
      operationId: updateCustomerOrders
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: an array of existing customer orders
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CustomerOrder'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/customerOrders/{customerOrderId}:
    get:
      tags:
        - customer orders
      summary: returns the single customer order
      description: ''
      operationId: getCustomerOrder
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: customerOrderId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CustomerOrder'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - customer orders
      summary: deletes the single customer order
      description: ''
      operationId: deleteCustomerOrder
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: customerOrderId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - customer orders
      summary: updates the single customer order
      description: ''
      operationId: updateCustomerOrder
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: customerOrderId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: the properties to update of the customer order
          required: true
          schema:
            $ref: '#/definitions/CustomerOrder'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/customers/{customerId}:
    get:
      tags:
        - customers
      summary: returns the single customer
      description: ''
      operationId: getCustomer
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: customerId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Customer'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - customers
      summary: deletes the single customer
      description: ''
      operationId: deleteCustomer
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: customerId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - customers
      summary: updates the single customer
      description: ''
      operationId: updateCustomer
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: customerId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: the properties to update of the customer
          required: true
          schema:
            $ref: '#/definitions/Customer'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/customers:
    get:
      tags:
        - customers
      summary: lists all customers
      description: ''
      operationId: getCustomers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListCustomer'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - customers
      summary: adds a batch of new customers
      description: ''
      operationId: addCustomers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new customers
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Customer'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - customers
      summary: deletes a batch of customers
      description: ''
      operationId: deleteCustomers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing customers (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Customer'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - customers
      summary: updates a batch of customers
      description: ''
      operationId: updateCustomers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing customers (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Customer'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/deliveryNotes/{deliveryNoteId}/book:
    patch:
      tags:
        - delivery notes
      summary: book the single delivery note
      description: ''
      operationId: bookDeliveryNote
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: deliveryNoteId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/deliveryNotes:
    get:
      tags:
        - delivery notes
      summary: lists all delivery notes
      description: ''
      operationId: getDeliveryNotes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: minDeliveryTime
          in: query
          description: 'min (inclusive) delivery time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxDeliveryTime
          in: query
          description: 'max (inclusive) delivery time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: minBookingTime
          in: query
          description: 'min (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxBookingTime
          in: query
          description: 'max (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: pointOfSale
          in: query
          description: point of sale
          required: false
          type: string
        - name: organizationalUnit
          in: query
          description: organizational unit
          required: false
          type: string
        - name: customer
          in: query
          description: customer id to filter by
          required: false
          type: string
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListDeliveryNote'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - delivery notes
      summary: adds delivery notes
      description: ''
      operationId: addDeliveryNotes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: data to add
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/DeliveryNote'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/deliveryNotes/{deliveryNoteId}:
    get:
      tags:
        - delivery notes
      summary: returns a single delivery note
      description: ''
      operationId: getDeliveryNote
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: deliveryNoteId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DeliveryNote'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/deliveryNotes/{deliveryNoteId}/finalize:
    patch:
      tags:
        - delivery notes
      summary: finalize the single delivery note
      description: ''
      operationId: finalizeDeliveryNote
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: deliveryNoteId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/deviceConfigurationVariables:
    get:
      tags:
        - device configuration variables
      summary: lists all device configuration variables
      description: ''
      operationId: getDeviceConfigurationVariables
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListDeviceConfigurationVariable'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - device configuration variables
      summary: adds a batch of new device configuration variables
      description: ''
      operationId: addDeviceConfigurationVariables
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new device configuration variables
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/DeviceConfigurationVariable'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - device configuration variables
      summary: deletes a batch of device configuration variables
      description: ''
      operationId: deleteDeviceConfigurationVariables
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing device configuration variables (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/DeviceConfigurationVariable'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - device configuration variables
      summary: updates a batch of device configuration variables
      description: ''
      operationId: updateDeviceConfigurationVariables
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing device configuration variables (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/DeviceConfigurationVariable'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/deviceConfigurationVariables/{deviceConfigurationVariableId}:
    get:
      tags:
        - device configuration variables
      summary: returns the single device configuration variable
      description: ''
      operationId: getDeviceConfigurationVariable
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: deviceConfigurationVariableId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DeviceConfigurationVariable'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - device configuration variables
      summary: deletes the single device configuration variable
      description: ''
      operationId: deleteDeviceConfigurationVariable
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: deviceConfigurationVariableId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/economicZones:
    get:
      tags:
        - economic zones
      summary: lists all economic zones
      description: ''
      operationId: getEconomicZones
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListEconomicZone'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - economic zones
      summary: adds a batch of new economic zones
      description: ''
      operationId: addEconomicZones
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new economic zones
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/EconomicZone'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - economic zones
      summary: deletes a batch of economic zones
      description: ''
      operationId: deleteEconomicZones
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing economic zones (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/EconomicZone'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - economic zones
      summary: updates a batch of economic zones
      description: ''
      operationId: updateEconomicZones
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing economic zones (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/EconomicZone'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/economicZones/{economicZoneId}:
    get:
      tags:
        - economic zones
      summary: returns the single economic zone
      description: ''
      operationId: getEconomicZone
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: economicZoneId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/EconomicZone'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/entryGates:
    get:
      tags:
        - ticketing
      summary: lists all entry gates
      description: ''
      operationId: getEntryGates
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListEntryGate'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - ticketing
      summary: adds a batch of new entry gates
      description: ''
      operationId: addEntryGates
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new entry gates
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/EntryGate'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - ticketing
      summary: deletes a batch of entry gates
      description: ''
      operationId: deleteEntryGates
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing entry gates (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/EntryGate'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - ticketing
      summary: updates a batch of entry gates
      description: ''
      operationId: updateEntryGates
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing entry gates (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/EntryGate'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/entryGates/{entryGateId}:
    get:
      tags:
        - ticketing
      summary: returns the single entry gate
      description: ''
      operationId: getEntryGate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: entryGateId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/EntryGate'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/events:
    get:
      tags:
        - ticketing
      summary: lists all events
      description: ''
      operationId: getEvents
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: minStartTime
          in: query
          description: 'min (inclusive) start time of the event (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxStartTime
          in: query
          description: 'max (inclusive) start time of the event (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListEvent'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - ticketing
      summary: adds a batch of new events
      description: ''
      operationId: addEvents
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: an array of new events
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - ticketing
      summary: updates a batch of events
      description: '[number] must be set in the objects, otherwise the object cannot be updated'
      operationId: updateEvents
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: an array of existing events
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/events/{eventId}:
    get:
      tags:
        - ticketing
      summary: returns the single event
      description: ''
      operationId: getEvent
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: eventId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Event'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - ticketing
      summary: deletes the single event
      description: ''
      operationId: deleteEvent
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: eventId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - ticketing
      summary: updates the single event
      description: ''
      operationId: updateEvent
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: eventId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: the properties to update of the event
          required: true
          schema:
            $ref: '#/definitions/Event'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/externalSystemCalls:
    get:
      tags:
        - external system calls
      summary: lists all external system calls
      description: ''
      operationId: getExternalSystemCalls
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListExternalSystemCall'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - external system calls
      summary: adds a batch of new external system calls
      description: ''
      operationId: addExternalSystemCalls
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new external system calls
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/ExternalSystemCall'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - external system calls
      summary: deletes a batch of external system calls
      description: ''
      operationId: deleteExternalSystemCalls
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing external system calls (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/ExternalSystemCall'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - external system calls
      summary: updates a batch of external system calls
      description: ''
      operationId: updateExternalSystemCalls
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing external system calls (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/ExternalSystemCall'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/externalSystemCalls/{externalSystemCallId}:
    get:
      tags:
        - external system calls
      summary: returns a single external system call
      description: ''
      operationId: getExternalSystemCall
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: externalSystemCallId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ExternalSystemCall'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - external system calls
      summary: deletes a single external system call
      description: ''
      operationId: deleteExternalSystemCall
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: externalSystemCallId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - external system calls
      summary: updates the single external system call
      description: ''
      operationId: updateExternalSystemCall
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: externalSystemCallId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: the properties to update of the external system call
          required: true
          schema:
            $ref: '#/definitions/ExternalSystemCall'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/fiscalUnits:
    get:
      tags:
        - fiscal units
      summary: lists all fiscal units
      description: ''
      operationId: getFiscalUnits
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
        - name: type
          in: query
          description: type of fiscal unit
          required: false
          type: string
          enum:
            - EFSTA
            - FISKALY
            - SWISSBIT
            - SWISSBIT_LAN
        - name: apiKey
          in: query
          description: api key of fiscal unit
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListFiscalUnit'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - fiscal units
      summary: adds a batch of fiscal units
      description: ''
      operationId: addFiscalUnits
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new fiscal units
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/FiscalUnit'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - fiscal units
      summary: updates a batch of fiscal units
      description: ''
      operationId: updateFiscalUnits
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing fiscal units (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/FiscalUnit'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/fiscalUnits/{fiscalUnitId}:
    get:
      tags:
        - fiscal units
      summary: returns the single fiscal unit
      description: ''
      operationId: getFiscalUnit
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: fiscalUnitId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/FiscalUnit'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - fiscal units
      summary: updates the fiscal unit
      description: ''
      operationId: updateFiscalUnit
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: fiscalUnitId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: the properties to update of the fiscal unit
          required: true
          schema:
            $ref: '#/definitions/FiscalUnit'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/images/{imageId}:
    get:
      tags:
        - images
      summary: displays the image
      description: ''
      operationId: getImage
      produces:
        - image/png
        - image/jpg
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: imageId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
            format: byte
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/infoTexts:
    get:
      tags:
        - info texts
      summary: lists all info texts
      description: ''
      operationId: getInfoTexts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListInfoText'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - info texts
      summary: adds a batch of new info texts
      description: ''
      operationId: addInfoTexts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new info texts
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/InfoText'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - info texts
      summary: deletes a batch of info texts
      description: ''
      operationId: deleteInfoTexts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing info texts (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/InfoText'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - info texts
      summary: updates a batch of info texts
      description: ''
      operationId: updateInfoTexts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing info texts (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/InfoText'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/infoTexts/{infoTextId}:
    get:
      tags:
        - info texts
      summary: returns the single info text
      description: ''
      operationId: getInfoText
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: infoTextId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/InfoText'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/inventories:
    get:
      tags:
        - inventories
      summary: lists all inventories
      description: ''
      operationId: getInventories
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListInventory'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - inventories
      summary: adds a batch of new inventories
      description: ''
      operationId: addInventories
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: an array of new inventories
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Inventory'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/inventories/{inventoryId}/inventoryLists/{inventoryListId}:
    get:
      tags:
        - inventories
      summary: returns the single inventory list
      description: ''
      operationId: getInventoryList
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: inventoryId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: inventoryListId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/InventoryList'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - inventories
      summary: updates the single inventory list
      description: ''
      operationId: updateInventoryList
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: inventoryId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: inventoryListId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: data to update
          required: true
          schema:
            $ref: '#/definitions/InventoryList'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/inventories/{inventoryId}/inventoryLists/{inventoryListId}/items/{productId}:
    get:
      tags:
        - inventories
      summary: returns the single inventory list item
      description: ''
      operationId: getInventoryListItem
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: inventoryId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: inventoryListId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: productId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/InventoryListItem'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - inventories
      summary: deletes the single inventory list item
      description: ''
      operationId: deleteInventoryListItem
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: inventoryId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: inventoryListId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: productId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - inventories
      summary: updates the single inventory list item
      description: ''
      operationId: updateInventoryListItem
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: inventoryId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: inventoryListId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: productId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: data to update
          required: true
          schema:
            $ref: '#/definitions/InventoryListItem'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/inventories/{inventoryId}/inventoryLists/{inventoryListId}/items:
    get:
      tags:
        - inventories
      summary: lists all inventory list items
      description: ''
      operationId: getInventoryListItems
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: inventoryId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: inventoryListId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListInventoryListItem'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - inventories
      summary: adds inventory list items
      description: ''
      operationId: addInventoryListItems
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: inventoryId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: inventoryListId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: data to update
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/InventoryListItem'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - inventories
      summary: updates inventory list items (property [product] required))
      description: ''
      operationId: updateInventoryListItems
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: inventoryId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: inventoryListId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: an array of inventory list items to update
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/InventoryListItem'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/inventories/{inventoryId}/inventoryLists/{inventoryListId}/book:
    patch:
      tags:
        - inventories
      summary: book the single inventory list
      description: ''
      operationId: bookInventoryList
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: inventoryId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: inventoryListId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/inventories/{inventoryId}:
    get:
      tags:
        - inventories
      summary: returns the single inventory
      description: ''
      operationId: getInventory
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: inventoryId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Inventory'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - inventories
      summary: deletes the single inventory (only allowed if hasBookedReceipts=false)
      description: ''
      operationId: deleteInventory
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: inventoryId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - inventories
      summary: updates the single inventory
      description: ''
      operationId: updateInventory
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: inventoryId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: the properties to update of the inventory
          required: true
          schema:
            $ref: '#/definitions/Inventory'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/inventories/{inventoryId}/inventoryLists:
    get:
      tags:
        - inventories
      summary: lists all inventory lists
      description: ''
      operationId: getInventoryLists
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: inventoryId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: minCreateTime
          in: query
          description: 'min (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxCreateTime
          in: query
          description: 'max (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: minBookingTime
          in: query
          description: 'min (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxBookingTime
          in: query
          description: 'max (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: bookingStatus
          in: query
          description: 'booking status (possible values: BOOKED, IN_PROGRESS)'
          required: false
          type: string
          enum:
            - BOOKED
            - IN_PROGRESS
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListInventoryList'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}:
    get:
      tags:
        - korona account
      summary: returns the single korona account
      description: ''
      operationId: getKoronaAccount
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/KoronaAccount'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/dayRatings:
    get:
      tags:
        - organizational units
      summary: lists all organizational unit related day ratings
      description: ''
      operationId: getOrganizationalUnitDayRatings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: organizationalUnitId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListDayRating'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - organizational units
      summary: adds a batch of new day ratings
      description: ''
      operationId: addOrganizationalUnitDayRatings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: organizationalUnitId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: an array of new day ratings
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/DayRating'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - organizational units
      summary: updates a batch of day ratings
      description: ''
      operationId: updateOrganizationalUnitDayRatings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: organizationalUnitId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: an array of new day ratings
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/DayRating'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/organizationalUnits:
    get:
      tags:
        - organizational units
      summary: lists all organizational units
      description: ''
      operationId: getOrganizationalUnits
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListOrganizationalUnit'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - organizational units
      summary: adds a batch of new organizational units
      description: ''
      operationId: addOrganizationalUnits
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: an array of new organizational units
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/OrganizationalUnit'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - organizational units
      summary: deletes a batch of organizational units
      description: ''
      operationId: deleteOrganizationalUnits
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing organizational units (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/OrganizationalUnit'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - organizational units
      summary: updates a batch of organizational units
      description: '[number] must be set in the objects, otherwise the object cannot be updated'
      operationId: updateOrganizationalUnits
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: an array of existing organizational units
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/OrganizationalUnit'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}:
    get:
      tags:
        - organizational units
      summary: returns the single organizational unit
      description: ''
      operationId: getOrganizationalUnit
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: organizationalUnitId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/OrganizationalUnit'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - organizational units
      summary: deletes the single organizational unit by its id
      description: ''
      operationId: deleteOrganizationalUnit
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: organizationalUnitId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - organizational units
      summary: 'updates the organizational unit '
      description: ''
      operationId: updateOrganizationalUnit
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: organizationalUnitId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: the properties to update of the organizational unit
          required: true
          schema:
            $ref: '#/definitions/OrganizationalUnit'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/dayRatings/{dayRatingIdOrDate}:
    get:
      tags:
        - organizational units
      summary: returns the single day rating by its id or date
      description: ''
      operationId: getOrganizationalUnitDayRating
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: organizationalUnitId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: dayRatingIdOrDate
          in: path
          description: the id or date (YYYY-MM-DD) of the day rating
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DayRating'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - organizational units
      summary: deletes the single day rating by its id or date
      description: ''
      operationId: deleteOrganizationalUnitDayRating
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: organizationalUnitId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: dayRatingIdOrDate
          in: path
          description: the id or date (YYYY-MM-DD) of the day rating
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - organizational units
      summary: updates the day rating by its id or date
      description: ''
      operationId: updateOrganizationalUnitDayRating
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: organizationalUnitId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: dayRatingIdOrDate
          in: path
          description: the id or date (YYYY-MM-DD) of the day rating
          required: true
          type: string
        - in: body
          name: body
          description: the properties to update of the day rating
          required: true
          schema:
            $ref: '#/definitions/DayRating'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/inventoryLists:
    get:
      tags:
        - organizational units
      summary: lists the inventory lists belonging to the organizational unit (KORONA.retail required)
      description: ''
      operationId: getOrganizationalUnitInventoryLists
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: organizationalUnitId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: minCreateTime
          in: query
          description: 'min (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxCreateTime
          in: query
          description: 'max (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: minBookingTime
          in: query
          description: 'min (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxBookingTime
          in: query
          description: 'max (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: bookingStatus
          in: query
          description: 'booking status (possible values: BOOKED, IN_PROGRESS)'
          required: false
          type: string
          enum:
            - BOOKED
            - IN_PROGRESS
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListInventoryList'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/productStocks:
    get:
      tags:
        - organizational units
      summary: lists the product stocks of the organizational unit, in case it contains a warehouse (KORONA.retail required)
      description: ''
      operationId: getOrganizationalUnitProductStocks
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: organizationalUnitId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListProductStock'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/stockReceipts:
    get:
      tags:
        - organizational units
      summary: lists the stock receipts belonging to the organizational unit (KORONA.retail required)
      description: ''
      operationId: getOrganizationalUnitStockReceipts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: organizationalUnitId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: minCreateTime
          in: query
          description: 'min (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxCreateTime
          in: query
          description: 'max (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: minBookingTime
          in: query
          description: 'min (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxBookingTime
          in: query
          description: 'max (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: sourceOrganizationalUnit
          in: query
          description: source organizational unit
          required: false
          type: string
        - name: bookingStatus
          in: query
          description: 'booking status (possible values: BOOKED, IN_PROGRESS)'
          required: false
          type: string
          enum:
            - BOOKED
            - IN_PROGRESS
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListStockReceipt'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/paymentMethods:
    get:
      tags:
        - payment methods
      summary: lists all payment methods
      description: ''
      operationId: getPaymentMethods
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListPaymentMethod'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - payment methods
      summary: adds a batch of new payment methods
      description: ''
      operationId: addPaymentMethods
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new payment methods
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PaymentMethod'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - payment methods
      summary: deletes a batch of payment methods
      description: ''
      operationId: deletePaymentMethods
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing payment methods (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PaymentMethod'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - payment methods
      summary: updates a batch of payment methods
      description: '[number] must be set in the objects, otherwise the object cannot be updated'
      operationId: updatePaymentMethods
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: an array of existing payment methods
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PaymentMethod'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/paymentMethods/{paymentMethodId}:
    get:
      tags:
        - payment methods
      summary: returns the single payment method
      description: ''
      operationId: getPaymentMethod
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: paymentMethodId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PaymentMethod'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - payment methods
      summary: deletes the single payment method
      description: ''
      operationId: deletePaymentMethod
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: paymentMethodId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - payment methods
      summary: updates the single payment method
      description: if [number] is set, the number of the object will change and the resource location as well
      operationId: updatePaymentMethod
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: paymentMethodId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: the properties to update of the payment method
          required: true
          schema:
            $ref: '#/definitions/PaymentMethod'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/posButtonLayouts:
    get:
      tags:
        - pos button layouts
      summary: lists all pos button layouts
      description: ''
      operationId: getPosButtonLayouts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListPosButtonLayout'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - pos button layouts
      summary: adds a batch of new pos button layouts
      description: ''
      operationId: addPosButtonLayouts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new pos button layouts
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PosButtonLayout'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - pos button layouts
      summary: deletes a batch of pos button layouts
      description: ''
      operationId: deletePosButtonLayouts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing pos button layouts (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PosButtonLayout'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - pos button layouts
      summary: updates a batch of pos button layouts
      description: '[number] must be set in the objects, otherwise the object cannot be updated'
      operationId: updatePosButtonLayouts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: an array of existing pos button layouts
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PosButtonLayout'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/posButtonLayouts/{posButtonLayoutId}:
    get:
      tags:
        - pos button layouts
      summary: returns the single pos button layout
      description: ''
      operationId: getPosButtonLayout
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: posButtonLayoutId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PosButtonLayout'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - pos button layouts
      summary: deletes the single pos botton layout
      description: ''
      operationId: deletePosButtonLayout
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: posButtonLayoutId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - pos button layouts
      summary: updates the single pos button layout
      description: if [number] is set, the number of the object will change and the resource location as well
      operationId: updatePosButtonLayout
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: posButtonLayoutId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: the properties to update of the pos button layout
          required: true
          schema:
            $ref: '#/definitions/PosButtonLayout'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/posPageLayoutConfigurations:
    get:
      tags:
        - pos page layout configurations
      summary: lists all pos page layout configurations
      description: ''
      operationId: getPosPageLayoutConfigurations
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListPosPageLayoutConfiguration'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - pos page layout configurations
      summary: adds a batch of new pos page layout configurations
      description: ''
      operationId: addPosPageLayoutConfigurations
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new pos page layout configurations
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PosPageLayoutConfiguration'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - pos page layout configurations
      summary: deletes a batch of pos page layout configurations
      description: ''
      operationId: deletePosPageLayoutConfigurations
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing pos page layout configurations (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PosPageLayoutConfiguration'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - pos page layout configurations
      summary: updates a batch of pos page layout configurations
      description: '[number] must be set in the objects, otherwise the object cannot be updated'
      operationId: updatePosPageLayoutConfigurations
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: an array of existing pos page layout configurations
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PosPageLayoutConfiguration'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/posPageLayoutConfigurations/{posPageLayoutConfigurationId}:
    get:
      tags:
        - pos page layout configurations
      summary: returns the single pos page layout configuration
      description: ''
      operationId: getPosPageLayoutConfiguration
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: posPageLayoutConfigurationId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PosPageLayoutConfiguration'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - pos page layout configurations
      summary: deletes the single pos page layout configuration
      description: ''
      operationId: deletePosPageLayoutConfiguration
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: posPageLayoutConfigurationId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - pos page layout configurations
      summary: updates the single pos page layout configuration
      description: if [number] is set, the number of the object will change and the resource location as well
      operationId: updatePosPageLayoutConfiguration
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: posPageLayoutConfigurationId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: the properties to update of the pos page layout configuration
          required: true
          schema:
            $ref: '#/definitions/PosPageLayoutConfiguration'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/posProfiles:
    get:
      tags:
        - pos profiles
      summary: lists all pos profiles
      description: ''
      operationId: getPosProfiles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListPosProfile'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - pos profiles
      summary: adds a batch of new pos profiles
      description: ''
      operationId: addPosProfiles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new pos profiles
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PosProfile'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - pos profiles
      summary: deletes a batch of pos profiles
      description: ''
      operationId: deletePosProfiles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing pos profiles (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PosProfile'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - pos profiles
      summary: updates a batch of pos profiles
      description: '[number] must be set in the objects, otherwise the object cannot be updated'
      operationId: updatePosProfiles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: an array of existing pos profiles
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PosProfile'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/posProfiles/{posProfileId}:
    get:
      tags:
        - pos profiles
      summary: returns the single pos profile
      description: ''
      operationId: getPosProfile
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: posProfileId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PosProfile'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - pos profiles
      summary: deletes the single pos profile
      description: ''
      operationId: deletePosProfile
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: posProfileId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - pos profiles
      summary: updates the single pos profile
      description: if [number] is set, the number of the object will change and the resource location as well
      operationId: updatePosProfile
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: posProfileId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: the properties to update of the pos profile
          required: true
          schema:
            $ref: '#/definitions/PosProfile'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/pointsOfSale/{pointOfSaleId}/endOfDayStatements:
    get:
      tags:
        - points of sale
      summary: lists all point of sale-related end-of-day-statements
      description: ''
      operationId: getPointOfSaleEndOfDayStatements
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: pointOfSaleId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: couplingId
          in: query
          description: the coupling-id of the device. It can be set to check whether your coupling-id is correct or not (works only, if point of sale is external).
          required: false
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListEndOfDayStatement'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - points of sale
      summary: adds a batch of point of sale-related end-of-day-statements
      description: ''
      operationId: addPointOfSaleEndOfDayStatements
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: pointOfSaleId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: couplingId
          in: query
          description: the coupling-id of the device
          required: true
          type: string
        - in: body
          name: body
          description: the end-of-day-statements to add
          required: false
          schema:
            type: array
            items:
              $ref: '#/definitions/EndOfDayStatement'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/pointsOfSale/{pointOfSaleId}/receipts:
    get:
      tags:
        - points of sale
      summary: lists all point of sale-related receipts
      description: ''
      operationId: getPointOfSaleReceipts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: pointOfSaleId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: couplingId
          in: query
          description: the coupling-id of the device. It can be set to check whether your coupling-id is correct or not (works only, if point of sale is external).
          required: false
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: zCount
          in: query
          description: z-count of the receipt
          required: false
          type: integer
          format: int64
        - name: minCreateTime
          in: query
          description: 'min (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxCreateTime
          in: query
          description: 'max (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
        - name: minBookingTime
          in: query
          description: 'min (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxBookingTime
          in: query
          description: 'max (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: voidedItems
          in: query
          description: when set to true, voided items will included in response
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListReceipt'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - points of sale
      summary: adds a batch of point of sale-related receipts
      description: ''
      operationId: addPointOfSaleReceipts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: pointOfSaleId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: couplingId
          in: query
          description: the coupling-id of the device
          required: true
          type: string
        - in: body
          name: body
          description: the receipts to add
          required: false
          schema:
            type: array
            items:
              $ref: '#/definitions/Receipt'
        - name: disableReceiptNumberPrefix
          in: query
          description: prevents setting a prefix at the receipt number
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/pointsOfSale:
    get:
      tags:
        - points of sale
      summary: lists all points of sale
      description: ''
      operationId: getPointsOfSale
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
        - name: external
          in: query
          description: 'indicates external/internal devices should be loaded (default: null (load all))'
          required: false
          type: boolean
        - name: coupled
          in: query
          description: 'indicates coupled/not coupled devices should be loaded (default: null (load all))'
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListPos'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - points of sale
      summary: adds a batch of new points of sale
      description: ''
      operationId: addPointsOfSale
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new points of sale
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Pos'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - points of sale
      summary: updates a batch of points of sale
      description: '[number] must be set in the objects, otherwise the object cannot be updated'
      operationId: updatePointsOfSale
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: an array of existing points of sale
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Pos'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/pointsOfSale/{pointOfSaleId}/balances:
    get:
      tags:
        - points of sale
      summary: ''
      description: ''
      operationId: getPointOfSaleBalances
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: pointOfSaleId
          in: path
          description: point of sale
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: zCount
          in: query
          description: z-count of the pos balance
          required: false
          type: integer
          format: int64
        - name: cashier
          in: query
          description: cashier id to filter by
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListPosBalance'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/pointsOfSale/{pointOfSaleId}/receipts/{receiptId}:
    get:
      tags:
        - points of sale
      summary: returns the single point of sale-related receipt
      description: ''
      operationId: getPointOfSaleReceipt
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: pointOfSaleId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: receiptId
          in: path
          description: the id of the receipt
          required: true
          type: string
        - name: couplingId
          in: query
          description: the coupling-id of the device. It can be set to check whether your coupling-id is correct or not (works only, if point of sale is external).
          required: false
          type: string
        - name: voidedItems
          in: query
          description: when set to true, voided items will included in response
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Receipt'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/pointsOfSale/{pointOfSaleId}:
    get:
      tags:
        - points of sale
      summary: returns the single point of sale
      description: ''
      operationId: getPointOfSale
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: couplingId
          in: query
          description: the coupling-id of the device. It can be set to check whether your coupling-id is correct or not (works only, if point of sale is external).
          required: false
          type: string
        - name: pointOfSaleId
          in: path
          description: the number of the point of sale
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Pos'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - points of sale
      summary: updates the point of sale
      description: ''
      operationId: updatePointOfSale
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: pointOfSaleId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: couplingId
          in: query
          description: the coupling-id of the device (required if already coupled)
          required: false
          type: string
        - name: decouple
          in: query
          description: executes uncoupling, if set to true, device will be uncoupled if point of sale is already coupled
          required: false
          type: boolean
        - in: body
          name: body
          description: the properties to update of the point of sale ('couplingId' only)
          required: true
          schema:
            $ref: '#/definitions/Pos'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/priceGroups:
    get:
      tags:
        - price groups
      summary: lists all price groups
      description: ''
      operationId: getPriceGroups
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListPriceGroup'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - price groups
      summary: adds a batch of new price groups
      description: ''
      operationId: addPriceGroups
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new price groups
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PriceGroup'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - price groups
      summary: deletes a batch of price groups
      description: ''
      operationId: deletePriceGroups
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing price groups (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PriceGroup'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - price groups
      summary: updates a batch of price groups
      description: ''
      operationId: updatePriceGroups
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing price groups (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PriceGroup'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/priceGroups/{priceGroupId}:
    get:
      tags:
        - price groups
      summary: returns the single price group
      description: ''
      operationId: getPriceGroup
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: priceGroupId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PriceGroup'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/products:
    get:
      tags:
        - products
      summary: lists all products
      description: ''
      operationId: getProducts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: productCodes
          in: query
          description: at least one product code to filter by (multiple separated by comma; max. 10)
          required: false
          type: string
        - name: commodityGroup
          in: query
          description: commodity group id to filter by
          required: false
          type: string
        - name: assortment
          in: query
          description: assortment id to filter by
          required: false
          type: string
        - name: tag
          in: query
          description: tag id to filter by
          required: false
          type: string
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListProduct'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - products
      summary: adds a batch of new products
      description: ''
      operationId: addProducts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - name: mergeListItems
          in: query
          description: if set to true, merges lists instead of replacing them
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new products
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - products
      summary: deletes a batch of products
      description: ''
      operationId: deleteProducts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing products (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - products
      summary: updates a batch of products
      description: '[number] must be set in the objects, otherwise the object cannot be updated'
      operationId: updateProducts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: mergeListItems
          in: query
          description: if set to true, merges lists instead of replacing them
          required: false
          type: boolean
        - in: body
          name: body
          description: an array of existing products
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/products/{productId}:
    get:
      tags:
        - products
      summary: returns the single product
      description: ''
      operationId: getProduct
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: productId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Product'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - products
      summary: deletes the single product
      description: ''
      operationId: deleteProduct
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: productId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - products
      summary: updates the single product
      description: if [number] is set, the number of the object will change and the resource location as well
      operationId: updateProduct
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: productId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: mergeListItems
          in: query
          description: if set to true, merges lists instead of replacing them
          required: false
          type: boolean
        - in: body
          name: body
          description: the properties to update of the product
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/products/{productId}/stocks:
    get:
      tags:
        - products
      summary: lists the product stocks in different warehouses (KORONA.retail required)
      description: ''
      operationId: getProductStocks
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: productId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListProductStock'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/productionTypes:
    get:
      tags:
        - production types
      summary: lists all production types
      description: ''
      operationId: getProductionTypes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListProductionType'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - production types
      summary: adds a batch of new production types
      description: ''
      operationId: addProductionTypes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new production types
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductionType'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - production types
      summary: deletes a batch of production types
      description: ''
      operationId: deleteProductionTypes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing production types (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductionType'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - production types
      summary: updates a batch of production types
      description: ''
      operationId: updateProductionTypes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing production types (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductionType'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/productionTypes/{productionTypeId}:
    get:
      tags:
        - production types
      summary: returns the single production type
      description: ''
      operationId: getProductionType
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: productionTypeId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ProductionType'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/promotions/{promotionId}:
    get:
      tags:
        - promotions
      summary: returns the single couponing promotion
      description: ''
      operationId: getPromotion
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: promotionId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Promotion'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/promotions:
    get:
      tags:
        - promotions
      summary: lists all couponing promotions
      description: ''
      operationId: getPromotions
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListPromotion'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/receiptLayoutConfigurations:
    get:
      tags:
        - receipt layout configurations
      summary: lists all receipt layout configurations
      description: ''
      operationId: getReceiptLayoutConfigurations
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListReceiptLayoutConfiguration'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - receipt layout configurations
      summary: adds a batch of new receipt layout configurations
      description: ''
      operationId: addReceiptLayoutConfigurations
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new receipt layout configurations
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/ReceiptLayoutConfiguration'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - receipt layout configurations
      summary: deletes a batch of receipt layout configurations
      description: ''
      operationId: deleteReceiptLayoutConfigurations
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing receipt layout configurations (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/ReceiptLayoutConfiguration'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - receipt layout configurations
      summary: updates a batch of receipt layout configurations
      description: '[number] must be set in the objects, otherwise the object cannot be updated'
      operationId: updateReceiptLayoutConfigurations
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: an array of existing receipt layout configurations
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/ReceiptLayoutConfiguration'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/receiptLayoutConfigurations/{receiptLayoutConfigurationId}:
    get:
      tags:
        - receipt layout configurations
      summary: returns the single receipt layout configuration
      description: ''
      operationId: getReceiptLayoutConfiguration
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: receiptLayoutConfigurationId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ReceiptLayoutConfiguration'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - receipt layout configurations
      summary: deletes the single receipt layout configuration
      description: ''
      operationId: deleteReceiptLayoutConfiguration
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: receiptLayoutConfigurationId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - receipt layout configurations
      summary: updates the single receipt layout configuration
      description: if [number] is set, the number of the object will change and the resource location as well
      operationId: updateReceiptLayoutConfiguration
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: receiptLayoutConfigurationId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: the properties to update of the receipt layout configuration
          required: true
          schema:
            $ref: '#/definitions/ReceiptLayoutConfiguration'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/receipts/{receiptId}:
    get:
      tags:
        - receipts
      summary: returns the single receipt
      description: ''
      operationId: getReceipt
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: receiptId
          in: path
          description: id of the receipt
          required: true
          type: string
        - name: voidedItems
          in: query
          description: when set to true, voided items will included in response
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Receipt'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/receipts:
    get:
      tags:
        - receipts
      summary: lists all receipts
      description: ''
      operationId: getReceipts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: pointOfSale
          in: query
          description: point of sale
          required: false
          type: string
        - name: organizationalUnit
          in: query
          description: organizational unit
          required: false
          type: string
        - name: zCount
          in: query
          description: z-count of the receipt
          required: false
          type: integer
          format: int64
        - name: minCreateTime
          in: query
          description: 'min (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxCreateTime
          in: query
          description: 'max (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
        - name: minBookingTime
          in: query
          description: 'min (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxBookingTime
          in: query
          description: 'max (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: voidedItems
          in: query
          description: when set to true, voided items will included in response
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListReceipt'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/salesTaxes:
    get:
      tags:
        - sales taxes
      summary: lists all sales taxes
      description: ''
      operationId: getSalesTaxes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListSalesTax'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - sales taxes
      summary: adds a batch of new sales taxes
      description: ''
      operationId: addSalesTaxes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new sectors
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/SalesTax'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - sales taxes
      summary: deletes a batch of sales taxes
      description: ''
      operationId: deleteSalesTaxes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing sales taxes (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/SalesTax'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - sales taxes
      summary: updates a batch of sales taxes
      description: ''
      operationId: updateSalesTaxes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing sales taxes (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/SalesTax'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/salesTaxes/{salesTaxId}:
    get:
      tags:
        - sales taxes
      summary: returns the single sales tax
      description: ''
      operationId: getSalesTax
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: salesTaxId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SalesTax'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/sectors:
    get:
      tags:
        - sectors
      summary: lists all sectors
      description: ''
      operationId: getSectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListSector'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - sectors
      summary: adds a batch of new sectors
      description: ''
      operationId: addSectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new sectors
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Sector'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - sectors
      summary: deletes a batch of sectors
      description: ''
      operationId: deleteSectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing sectors (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Sector'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - sectors
      summary: updates a batch of sectors
      description: ''
      operationId: updateSectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing sectors (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Sector'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/sectors/{sectorId}:
    get:
      tags:
        - sectors
      summary: returns the single sector
      description: ''
      operationId: getSector
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: sectorId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Sector'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/specialPriceConfigurations:
    get:
      tags:
        - special price configurations
      summary: lists all special price configurations
      description: ''
      operationId: getSpecialPriceConfigurations
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListSpecialPriceConfiguration'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - special price configurations
      summary: adds a batch of new special price configurations
      description: ''
      operationId: addSpecialPriceConfigurations
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new special price configurations
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/SpecialPriceConfiguration'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - special price configurations
      summary: deletes a batch of special price configurations
      description: ''
      operationId: deleteSpecialPriceConfigurations
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing special price configurations (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/SpecialPriceConfiguration'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - special price configurations
      summary: updates a batch of special price configurations
      description: ''
      operationId: updateSpecialPriceConfigurations
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing special price configurations (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/SpecialPriceConfiguration'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/specialPriceConfigurations/{specialPriceConfigurationId}/specialPrices:
    get:
      tags:
        - special price configurations
      summary: returns the special prices for the given configuration
      description: ''
      operationId: getSpecialPrices
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: specialPriceConfigurationId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/SpecialPrice'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/specialPriceConfigurations/{specialPriceConfigurationId}:
    get:
      tags:
        - special price configurations
      summary: returns the single special price configuration
      description: ''
      operationId: getSpecialPriceConfiguration
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: specialPriceConfigurationId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SpecialPriceConfiguration'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/statistics/revenueDataForCustomerGroups:
    get:
      tags:
        - statistics
      summary: returns the turnover per customer group during the given period
      description: ''
      operationId: getRevenueForCustomerGroups
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: organizationalUnit
          in: query
          description: number of the organizational unit
          required: false
          type: string
        - name: period
          in: query
          description: time period for comparison
          required: false
          type: string
          enum:
            - DAY
            - WEEK
            - MONTH
            - YEAR
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/StatisticMapStringRevenueData'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/statistics/revenueDataHourly:
    get:
      tags:
        - statistics
      summary: returns the turnover per hour during the given period
      description: ''
      operationId: getRevenueHourly
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: organizationalUnit
          in: query
          description: number of the organizational unit
          required: false
          type: string
        - name: period
          in: query
          description: time period for comparison
          required: false
          type: string
          enum:
            - DAY
            - WEEK
            - MONTH
            - YEAR
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/StatisticMapStringRevenueData'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/statistics/topSeller:
    get:
      tags:
        - statistics
      summary: returns the top-seller
      description: ''
      operationId: getTopSeller
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: organizationalUnit
          in: query
          description: number of the organizational unit
          required: false
          type: string
        - name: period
          in: query
          description: time period for comparison
          required: false
          type: string
          enum:
            - DAY
            - WEEK
            - MONTH
            - YEAR
        - name: limit
          in: query
          description: maximum number of products to show
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/StatisticListTopSeller'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/statistics/revenueData:
    get:
      tags:
        - statistics
      summary: returns information about the revenue in the given period
      description: ''
      operationId: getRevenue
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: organizationalUnit
          in: query
          description: number of the organizational unit
          required: false
          type: string
        - name: period
          in: query
          description: time period for comparison
          required: false
          type: string
          enum:
            - DAY
            - WEEK
            - MONTH
            - YEAR
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/StatisticRevenueData'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/stockAdjustments/{stockAdjustmentId}/items:
    get:
      tags:
        - stock adjustments
      summary: lists all stock adjustment items
      description: ''
      operationId: getStockAdjustmentItems
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: stockAdjustmentId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListStockAdjustmentItem'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - stock adjustments
      summary: adds stock adjustment items
      description: ''
      operationId: addStockAdjustmentItems
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: stockAdjustmentId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: data to add
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/StockAdjustmentItem'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - stock adjustments
      summary: updates stock adjustment items
      description: ''
      operationId: updateStockAdjustmentItems
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: stockAdjustmentId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: data to update
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/StockAdjustmentItem'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/stockAdjustments:
    get:
      tags:
        - stock adjustments
      summary: lists all stock adjustments
      description: ''
      operationId: getStockAdjustments
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: minFinishTime
          in: query
          description: 'min (inclusive) finish time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxFinishTime
          in: query
          description: 'max (inclusive) finish time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: minBookingTime
          in: query
          description: 'min (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxBookingTime
          in: query
          description: 'max (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: warehouse
          in: query
          description: warehouse (= organizational unit having warehouse flag)
          required: false
          type: string
        - name: bookingStatus
          in: query
          description: 'booking status (possible values: BOOKED, IN_PROGRESS)'
          required: false
          type: string
          enum:
            - BOOKED
            - IN_PROGRESS
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
        - name: receiptNumber
          in: query
          description: receipt number
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListStockAdjustment'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - stock adjustments
      summary: adds stock adjustments
      description: ''
      operationId: addStockAdjustments
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: data to add
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/StockAdjustment'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/stockAdjustments/{stockAdjustmentId}/items/{productId}:
    get:
      tags:
        - stock adjustments
      summary: returns a single stock adjustment item
      description: ''
      operationId: getStockAdjustmentItem
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: stockAdjustmentId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: productId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/StockAdjustmentItem'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - stock adjustments
      summary: deletes the single stock adjustment item
      description: ''
      operationId: deleteStockAdjustmentItem
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: stockAdjustmentId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: productId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - stock adjustments
      summary: updates the single stock adjustment item
      description: ''
      operationId: updateStockAdjustmentItem
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: stockAdjustmentId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: productId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: data to update
          required: true
          schema:
            $ref: '#/definitions/StockAdjustmentItem'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/stockAdjustments/{stockAdjustmentId}:
    get:
      tags:
        - stock adjustments
      summary: returns a single stock adjustment
      description: ''
      operationId: getStockAdjustment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: stockAdjustmentId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/StockAdjustment'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - stock adjustments
      summary: updates the single stock adjustment
      description: ''
      operationId: updateStockAdjustment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: stockAdjustmentId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: data to update
          required: true
          schema:
            $ref: '#/definitions/StockAdjustment'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/stockAdjustments/{stockAdjustmentId}/book:
    patch:
      tags:
        - stock adjustments
      summary: book the single stock adjustment
      description: ''
      operationId: bookStockAdjustment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: stockAdjustmentId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/stockOrders/{stockOrderId}/items:
    get:
      tags:
        - stock orders
      summary: lists all stock order items
      description: ''
      operationId: getStockOrderItems
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: stockOrderId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListStockOrderItem'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/stockOrders:
    get:
      tags:
        - stock orders
      summary: lists all stock orders
      description: ''
      operationId: getStockOrders
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: minCreateTime
          in: query
          description: 'min (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxCreateTime
          in: query
          description: 'max (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: minBookingTime
          in: query
          description: 'min (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxBookingTime
          in: query
          description: 'max (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: organizationalUnit
          in: query
          description: organizational unit
          required: false
          type: string
        - name: sourceOrganizationalUnit
          in: query
          description: source organizational unit
          required: false
          type: string
        - name: bookingStatus
          in: query
          description: 'booking status (possible values: BOOKED, IN_PROGRESS)'
          required: false
          type: string
          enum:
            - BOOKED
            - IN_PROGRESS
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
        - name: finalized
          in: query
          description: load only objects with this finalized status
          required: false
          type: boolean
        - name: includeItems
          in: query
          description: 'include items of receipt (default: true; setting to false improves performance)'
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListStockOrder'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/stockOrders/{stockOrderId}/book:
    patch:
      tags:
        - stock orders
      summary: book the single stock order
      description: ''
      operationId: bookStockOrder
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: stockOrderId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/stockOrders/{stockOrderId}:
    get:
      tags:
        - stock orders
      summary: returns a single stock order
      description: ''
      operationId: getStockOrder
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: stockOrderId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: includeItems
          in: query
          description: 'include items of receipt (default: true; setting to false improves performance)'
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/StockOrder'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/stockReceipts:
    get:
      tags:
        - stock receipts
      summary: lists all stock-receipts
      description: ''
      operationId: getStockReceipts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: minCreateTime
          in: query
          description: 'min (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxCreateTime
          in: query
          description: 'max (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: minBookingTime
          in: query
          description: 'min (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxBookingTime
          in: query
          description: 'max (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: organizationalUnit
          in: query
          description: organizational unit
          required: false
          type: string
        - name: sourceOrganizationalUnit
          in: query
          description: source organizational unit
          required: false
          type: string
        - name: bookingStatus
          in: query
          description: 'booking status (possible values: BOOKED, IN_PROGRESS)'
          required: false
          type: string
          enum:
            - BOOKED
            - IN_PROGRESS
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListStockReceipt'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - stock receipts
      summary: adds stock-receipts
      description: ''
      operationId: addStockReceipts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: data to add
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/StockReceipt'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/stockReceipts/{stockReceiptId}/items/{productId}:
    get:
      tags:
        - stock receipts
      summary: returns the single stock-receipt item
      description: ''
      operationId: getStockReceiptItem
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: stockReceiptId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: productId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/StockReceiptItem'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - stock receipts
      summary: deletes the single stock-receipt item
      description: ''
      operationId: deleteStockReceiptItem
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: stockReceiptId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: productId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - stock receipts
      summary: updates the single stock-receipt item
      description: ''
      operationId: updateStockReceiptItem
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: stockReceiptId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: productId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: data to update
          required: true
          schema:
            $ref: '#/definitions/StockReceiptItem'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/stockReceipts/{stockReceiptId}/items:
    get:
      tags:
        - stock receipts
      summary: lists all stock-receipt items
      description: ''
      operationId: getStockReceiptItems
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: stockReceiptId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListStockReceiptItem'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - stock receipts
      summary: adds stock-receipt items
      description: ''
      operationId: addStockReceiptItems
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: stockReceiptId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: data to add
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/StockReceiptItem'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - stock receipts
      summary: updates stock-receipt items
      description: ''
      operationId: updateStockReceiptItems
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: stockReceiptId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: data to update
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/StockReceiptItem'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/stockReceipts/{stockReceiptId}:
    get:
      tags:
        - stock receipts
      summary: returns the single stock-receipt
      description: ''
      operationId: getStockReceipt
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: stockReceiptId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/StockReceipt'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - stock receipts
      summary: updates the single stock-receipt
      description: ''
      operationId: updateStockReceipt
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: stockReceiptId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: data to update
          required: true
          schema:
            $ref: '#/definitions/StockReceipt'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/stockReceipts/{stockReceiptId}/book:
    patch:
      tags:
        - stock receipts
      summary: book the single stock-receipt
      description: ''
      operationId: bookStockReceipt
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: stockReceiptId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/storeOrders/{storeOrderId}/items:
    get:
      tags:
        - store orders
      summary: lists all store order items
      description: ''
      operationId: getStoreOrderItems
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: storeOrderId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListStoreOrderItem'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - store orders
      summary: adds store order items
      description: ''
      operationId: addStoreOrderItems
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: storeOrderId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: data to add
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/StoreOrderItem'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - store orders
      summary: updates store order items
      description: ''
      operationId: updateStoreOrderItems
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: storeOrderId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: data to update
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/StoreOrderItem'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/storeOrders:
    get:
      tags:
        - store orders
      summary: lists all store orders
      description: ''
      operationId: getStoreOrders
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: minCreateTime
          in: query
          description: 'min (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxCreateTime
          in: query
          description: 'max (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: targetOrganizationalUnit
          in: query
          description: target organizational unit
          required: false
          type: string
        - name: minFinishTime
          in: query
          description: 'min (inclusive) finish time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxFinishTime
          in: query
          description: 'max (inclusive) finish time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListStoreOrder'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - store orders
      summary: adds store orders
      description: ''
      operationId: addStoreOrders
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: data to add
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/StoreOrder'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/storeOrders/{storeOrderId}/items/{productId}:
    get:
      tags:
        - store orders
      summary: returns the single store order item
      description: ''
      operationId: getStoreOrderItem
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: storeOrderId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: productId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/StoreOrderItem'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - store orders
      summary: deletes the single store order item
      description: ''
      operationId: deleteStoreOrderItem
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: storeOrderId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: productId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - store orders
      summary: updates the single store order item
      description: ''
      operationId: updateStoreOrderItem
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: storeOrderId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: productId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: data to update
          required: true
          schema:
            $ref: '#/definitions/StoreOrderItem'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/storeOrders/{storeOrderId}:
    get:
      tags:
        - store orders
      summary: returns a single store order
      description: ''
      operationId: getStoreOrder
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: storeOrderId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/StoreOrder'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - store orders
      summary: updates the single store order
      description: ''
      operationId: updateStoreOrder
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: storeOrderId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: data to update
          required: true
          schema:
            $ref: '#/definitions/StoreOrder'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/storeOrders/{storeOrderId}/order:
    patch:
      tags:
        - store orders
      summary: orders and finalizes the store order
      description: ''
      operationId: orderStoreOrder
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: storeOrderId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - name: orderAction
          in: query
          description: type of order finalization. according to items speficiations (either each item must have a source, or those without are ignored and deleted) or regardless of items specifications (joint supplier or warehouse)
          required: false
          type: string
          enum:
            - ACCORDING_TO_SPECIFICATIONS
            - ACCORDING_TO_SPECIFICATIONS_IGNORE_AND_DELETE
            - REGARDLESS_OF_SPECIFICATIONS_AT_JOINT_FROM_SUPPLIER
            - REGARDLESS_OF_SPECIFICATIONS_AT_JOINT_FROM_WAREHOUSE
        - name: warehouse
          in: query
          description: warehouse (= organizational unit having warehouse flag)
          required: false
          type: string
        - name: supplier
          in: query
          description: supplier
          required: false
          type: string
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/suppliers:
    get:
      tags:
        - suppliers
      summary: lists all suppliers
      description: ''
      operationId: getSuppliers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListSupplier'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - suppliers
      summary: adds a batch of new suppliers
      description: ''
      operationId: addSuppliers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new suppliers
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Supplier'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - suppliers
      summary: deletes a batch of suppliers
      description: ''
      operationId: deleteSuppliers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing suppliers (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Supplier'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - suppliers
      summary: updates a batch of suppliers
      description: ''
      operationId: updateSuppliers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing suppliers (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Supplier'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/suppliers/{supplierId}:
    get:
      tags:
        - suppliers
      summary: returns the single supplier
      description: ''
      operationId: getSupplier
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: supplierId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Supplier'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/tags/{tagId}:
    get:
      tags:
        - tags
      summary: returns the single tag
      description: ''
      operationId: getTag
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: tagId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Tag'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - tags
      summary: deletes the single tag
      description: ''
      operationId: deleteTag
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: tagId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - tags
      summary: updates the single tag
      description: ''
      operationId: updateTag
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: tagId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: the properties to update of the tag
          required: true
          schema:
            $ref: '#/definitions/Tag'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/tags:
    get:
      tags:
        - tags
      summary: lists all tags
      description: ''
      operationId: getTags
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListTag'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - tags
      summary: adds a batch of new tags
      description: ''
      operationId: addTags
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new tags
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Tag'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - tags
      summary: deletes a batch of tags
      description: ''
      operationId: deleteTags
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing tags (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Tag'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - tags
      summary: updates a batch of tags
      description: ''
      operationId: updateTags
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing tags (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Tag'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/ticketDefinitions:
    get:
      tags:
        - ticketing
      summary: lists all ticket definitions
      description: ''
      operationId: getTicketDefinitions
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListTicketDefinition'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - ticketing
      summary: adds a batch of new ticket definitions
      description: ''
      operationId: addTicketDefinitions
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new ticket definitions
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/TicketDefinition'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - ticketing
      summary: deletes a batch of ticket definitions
      description: ''
      operationId: deleteTicketDefinitions
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing ticket definitions (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/TicketDefinition'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - ticketing
      summary: updates a batch of ticket definitions
      description: ''
      operationId: updateTicketDefinitions
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing ticket definitions (id or number required)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/TicketDefinition'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/ticketDefinitions/{ticketDefinitionId}:
    get:
      tags:
        - ticketing
      summary: returns the single ticket definition
      description: ''
      operationId: getTicketDefinition
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: ticketDefinitionId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/TicketDefinition'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - ticketing
      summary: deletes the single ticket definition
      description: ''
      operationId: deleteTicketDefinition
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: ticketDefinitionId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/tickets:
    get:
      tags:
        - ticketing
      summary: lists all tickets
      description: ''
      operationId: getTickets
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: true
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: true
          type: integer
          format: int32
        - name: ticketNumber
          in: query
          description: ticket number
          required: false
          type: string
        - name: customerNumber
          in: query
          description: customer number
          required: false
          type: string
        - name: creationDateFrom
          in: query
          description: creation date from
          required: false
          type: string
          format: date-time
        - name: creationDateTo
          in: query
          description: creation date to
          required: false
          type: string
          format: date-time
        - name: locked
          in: query
          description: is ticket locked
          required: false
          type: boolean
        - name: ownerLastName
          in: query
          description: last name of owner
          required: false
          type: string
        - name: ownerFirstName
          in: query
          description: first name of owner
          required: false
          type: string
        - name: loadOwnerImage
          in: query
          description: set true if you want to load the owner's image
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListTicket'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/tickets/{ticketNumber}:
    post:
      tags:
        - ticketing
      summary: unlocks the single ticket
      description: ''
      operationId: unlockTicket
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: ticketNumber
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - ticketing
      summary: locks the single ticket
      description: ''
      operationId: lockTicket
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: ticketNumber
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - ticketing
      summary: updates the single ticket
      description: ''
      operationId: updateTicket
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: ticketNumber
          in: path
          description: old ticket number
          required: true
          type: string
        - name: newTicketNumber
          in: query
          description: new ticket number
          required: false
          type: string
        - name: firstName
          in: query
          description: ticket owner's first name
          required: false
          type: string
        - name: lastName
          in: query
          description: ticket owner's last name
          required: false
          type: string
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/timeTrackingEntities:
    get:
      tags:
        - time tracking
      summary: lists time tracking entities
      description: ''
      operationId: getEntities
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListTimeTrackingEntity'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - time tracking
      summary: adds a batch of new time tracking entities
      description: ''
      operationId: addEntities
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new time tracking entities
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/TimeTrackingEntity'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/timeTrackingEntities/{timeTrackingEntityId}:
    get:
      tags:
        - time tracking
      summary: returns a single time tracking entity
      description: ''
      operationId: getTimeTrackingEntity
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: timeTrackingEntityId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/TimeTrackingEntity'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/timeTrackingEntries:
    get:
      tags:
        - time tracking
      summary: lists time tracking entries
      description: ''
      operationId: getEntries
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: timeTrackingEntity
          in: query
          description: time tracking entity id to filter by
          required: false
          type: string
        - name: cashier
          in: query
          description: cashier id to filter by
          required: false
          type: string
        - name: organizationalUnit
          in: query
          description: organizational unit
          required: false
          type: string
        - name: minTimestamp
          in: query
          description: 'min (inclusive) timestamp (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: maxTimestamp
          in: query
          description: 'max (inclusive) timestamp (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)'
          required: false
          type: string
          format: date-time
        - name: includeDeleted
          in: query
          description: 'indicates deleted objects should be loaded or not (default: false)'
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListTimeTrackingEntry'
        '204':
          description: Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - time tracking
      summary: adds a batch of new time tracking entries
      description: ''
      operationId: addEntries
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: array of new time tracking entries
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/TimeTrackingEntry'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/timeTrackingEntries/{timeTrackingEntryId}:
    get:
      tags:
        - time tracking
      summary: returns a single time tracking entry
      description: ''
      operationId: getTimeTrackingEntry
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: timeTrackingEntryId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/TimeTrackingEntry'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/userRoles:
    get:
      tags:
        - user roles
      summary: lists all user roles
      description: ''
      operationId: getUserRoles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: page
          in: query
          description: number of the page to fetch
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: amount of objects to return per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: attribute to sort by (multiple separated by comma; max. 5)
          required: false
          type: string
        - name: revision
          in: query
          description: last revision number, objects with a greater revision than this will be returned
          required: false
          type: integer
          format: int64
        - name: number
          in: query
          description: number of the related object
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ResultListUserRole'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    post:
      tags:
        - user roles
      summary: adds a batch of new user roles
      description: ''
      operationId: addUserRoles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: upsert
          in: query
          description: when set to true, updates the object instead of generating a already-exists-error
          required: false
          type: boolean
        - in: body
          name: body
          description: an array of new user roles
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/UserRole'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - user roles
      summary: deletes a batch of user roles
      description: ''
      operationId: deleteUserRoles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing user roles
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/UserRole'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - user roles
      summary: updates a batch of user roles
      description: ''
      operationId: updateUserRoles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - in: body
          name: body
          description: array of existing user roles
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/UserRole'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AddOrUpdateResult'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
  /accounts/{koronaAccountId}/userRoles/{userRoleId}:
    get:
      tags:
        - user roles
      summary: returns the single user role
      description: ''
      operationId: getUserRole
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: userRoleId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/UserRole'
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    delete:
      tags:
        - user roles
      summary: deletes the single user role
      description: ''
      operationId: deleteUserRole
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: userRoleId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
      responses:
        '204':
          description: Request successful, delete on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
    patch:
      tags:
        - user roles
      summary: updates the single user role
      description: ''
      operationId: updateUserRole
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: koronaAccountId
          in: path
          description: account id of the KORONA.cloud account
          required: true
          type: string
        - name: userRoleId
          in: path
          description: 'id of the related object (important: id should match the uuid-format)'
          required: true
          type: string
        - in: body
          name: body
          description: the properties to update of the user role
          required: true
          schema:
            $ref: '#/definitions/UserRole'
      responses:
        '204':
          description: Request successful, patch on single resource does not return any content
        '400':
          description: Malformed querystring or model
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Missing or invalid http-authentication
        '403':
          description: Requested action is not allowed
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Object not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests in a specified period
          schema:
            $ref: '#/definitions/TooManyRequestsError'
      security:
        - basicAuth: [ ]
securityDefinitions:
  basicAuth:
    description: fill in your api username and password
    type: basic
definitions:
  AddOrUpdateResult:
    type: object
    properties:
      action:
        type: string
        enum:
          - ADDED
          - DELETED
          - QUEUED
          - UPDATED
      href:
        type: string
      revision:
        type: integer
        format: int64
      message:
        type: string
      number:
        type: string
      status:
        type: string
        enum:
          - ERROR
          - OK
      id:
        type: string
  BadRequestError:
    type: object
    properties:
      message:
        type: string
        description: a short description of the error in english
      code:
        type: string
        description: the code for client-side evaluation of the error
        enum:
          - BATCH_SIZE_OUT_OF_RANGE
          - DATE_NOT_EXISTS
          - INVALID_MODEL_PROPERTY
          - INVALID_QUERY_PARAMETER
          - MALFORMED_MODEL_ID_OR_DATE
          - MALFORMED_MODEL_ID_OR_NUMBER
          - MISSING_MODEL
          - MISSING_QUERY_PARAMETER
          - NUMBER_ALREADY_IN_USE
          - NUMBER_NOT_EXISTS
          - SUBMITTED_DATA_NOT_WELLFORMED
          - UNRESOLVED_RELATION
  ForbiddenError:
    type: object
    properties:
      message:
        type: string
        description: a short description of the error in english
      code:
        type: string
        description: the code for client-side evaluation of the error
        enum:
          - CLOUD_ACCOUNT_DISABLED
          - POINT_OF_SALE_NOT_EXTERNAL
          - POINT_OF_SALE_NOT_COUPLED
          - POINT_OF_SALE_COUPLED_WITH_OTHER_DEVICE
          - DELETE_NOT_ALLOWED
          - SAVE_OR_UPDATE_NOT_ALLOWED
          - ADDITIONAL_CLOUD_PACKAGE_REQUIRED
          - ADDITIONAL_API_ACCESS_REQUIRED
          - API_USAGE_DISABLED
  NotFoundError:
    type: object
    properties:
      message:
        type: string
        description: a short description of the error in english
      code:
        type: string
        description: the code for client-side evaluation of the error
        enum:
          - ACCOUNT_NOT_FOUND
          - MODEL_ID_NOT_FOUND
          - NUMBER_NOT_FOUND
          - DATE_NOT_FOUND
          - INDEX_NOT_FOUND
          - CONDITION_MISMATCH
  TooManyRequestsError:
    type: object
    properties:
      message:
        type: string
        description: a short description of the error in english
      code:
        type: string
        description: the code for client-side evaluation of the error
        enum:
          - DAILY_LIMIT_EXCEEDED
  Account:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      cashJournalRelevant:
        type: boolean
      denominationInput:
        type: boolean
      exclusive:
        type: boolean
      name:
        type: string
      producer:
        $ref: '#/definitions/ModelReference'
      requiresSerialNumber:
        type: boolean
      revenueAccount:
        $ref: '#/definitions/ModelReference'
      type:
        type: string
        enum:
          - DEPOSIT
          - WITHDRAWAL
      showTransactionOnCustomerDisplay:
        type: boolean
  ModelReference:
    type: object
    properties:
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx). recommanded to use for linking purposes. will never change.
      name:
        type: string
        description: name, like it is set in backoffice
      number:
        type: string
        description: number, like it is set in backoffice
    description: generic model for representation of id, number and name containing model purposes
  ResultList:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          type: object
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  ResultListAccount:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/Account'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  AdditionalReceiptInfoType:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      cashierInputRequired:
        type: boolean
      customerGroups:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/ModelReference'
      description:
        type: string
      minItemQuantity:
        type: number
      minTotal:
        type: number
      name:
        type: string
      options:
        type: array
        uniqueItems: true
        items:
          type: string
      organizationalUnits:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/ModelReference'
      required:
        type: boolean
      tag:
        $ref: '#/definitions/ModelReference'
      validity:
        $ref: '#/definitions/Validity'
  DayTimePeriod:
    type: object
    properties:
      from:
        type: string
      to:
        type: string
  ResultListAdditionalReceiptInfoType:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/AdditionalReceiptInfoType'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  TotalPeriod:
    type: object
    properties:
      from:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      to:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
  Validity:
    type: object
    properties:
      daily:
        $ref: '#/definitions/DayTimePeriod'
      daysOfMonth:
        type: array
        uniqueItems: true
        items:
          type: integer
          format: int32
      daysOfWeek:
        type: array
        uniqueItems: true
        items:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
      total:
        $ref: '#/definitions/TotalPeriod'
  Assortment:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      costCenter:
        readOnly: true
        $ref: '#/definitions/ModelReference'
      description:
        type: string
      lastCleanUp:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
        readOnly: true
      name:
        type: string
  ResultListAssortment:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/Assortment'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  Attendance:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      categoryName:
        type: string
      categoryId:
        type: string
      creationTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      event:
        $ref: '#/definitions/ModelReference'
      expirationTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      seats:
        type: integer
        format: int64
  ResultListAttendance:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/Attendance'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  CashierRole:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      name:
        type: string
      permissions:
        type: array
        uniqueItems: true
        items:
          type: string
          enum:
            - BLANK_RECEIPT
            - CANCEL_ITEM
            - CANCEL_LAST_RECEIPT_ITEM
            - CANCEL_RECEIPT
            - DELETE_RECEIPT
            - EXTERNAL_POINT_OF_SALE
            - FOREIGN_RECEIPT
            - MDE_ADMIN
            - PRICE
            - REPORTS
            - RETURN
            - REVISION
            - TERMINATE_BREAK_LOCK
            - CASH_DRAWER
  ResultListCashierRole:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/CashierRole'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  Cashier:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      alias:
        type: string
      deactivated:
        type: boolean
      email:
        type: string
      firstname:
        type: string
      surname:
        type: string
      gender:
        type: string
        enum:
          - MALE
          - FEMALE
      loginCode:
        type: string
        description: by default, the md5 hash of the cashiers login code. on GET requests this can be changed via the `displayCashierCredentials=(HASH|PLAIN|NONE)` parameter, on POST and PATCH it is always assumed to be `PLAIN` text.
      loginPassword:
        type: string
        description: by default, the md5 hash of the cashiers login password. on GET requests this can be changed via the `displayCashierCredentials=(HASH|PLAIN|NONE)` parameter, on POST and PATCH it is always assumed to be `PLAIN` text.
      permissions:
        type: array
        readOnly: true
        uniqueItems: true
        items:
          type: string
          enum:
            - BLANK_RECEIPT
            - CANCEL_ITEM
            - CANCEL_LAST_RECEIPT_ITEM
            - CANCEL_RECEIPT
            - DELETE_RECEIPT
            - EXTERNAL_POINT_OF_SALE
            - FOREIGN_RECEIPT
            - MDE_ADMIN
            - PRICE
            - REPORTS
            - RETURN
            - REVISION
            - TERMINATE_BREAK_LOCK
            - CASH_DRAWER
      role:
        type: string
        readOnly: true
      bonusPoints:
        type: integer
        format: int64
      backgroundColor:
        type: integer
        format: int32
      organizationalUnits:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/ModelReference'
      cashierRole:
        $ref: '#/definitions/ModelReference'
      createTime:
        type: string
        format: date
        example: '2018-11-22'
        description: 'Format: yyyy-MM-dd'
        readOnly: true
      lastReceiptTime:
        type: string
        format: date
        example: '2018-11-22'
        description: 'Format: yyyy-MM-dd'
        readOnly: true
  ResultListCashier:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/Cashier'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  CashierVerificationRequirement:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      questionText:
        type: string
      requiredAge:
        type: integer
        format: int32
      type:
        type: string
        enum:
          - AGE
          - OK
          - OPTION_SELECTION
          - YES_NO
      answerOptions:
        type: array
        uniqueItems: true
        items:
          type: string
      failureText:
        type: string
      name:
        type: string
  ResultListCashierVerificationRequirement:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/CashierVerificationRequirement'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  CommodityGroup:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      key:
        type: string
      name:
        type: string
      parentCommodityGroup:
        $ref: '#/definitions/ModelReference'
  ResultListCommodityGroup:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/CommodityGroup'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  CreationTask:
    type: object
    properties:
      entryId:
        type: integer
        format: int64
      description:
        type: string
      user:
        type: string
      creationTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      ticketNumberStart:
        type: string
      quantity:
        type: integer
        format: int64
      created:
        type: integer
        format: int64
      status:
        type: string
        enum:
          - PREPARED
          - RUNNING
          - FINISHED
          - FAILED
      productNumber:
        type: string
      personalization:
        $ref: '#/definitions/TicketPersonalization'
      ticketData:
        $ref: '#/definitions/TicketData'
  TicketData:
    type: object
    properties:
      validFrom:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      dailyValidFrom:
        type: string
        example: '13:37'
        description: 'Format: HH:mm'
      maxPossibleAdmissions:
        type: integer
        format: int32
      validTo:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      dailyValidTo:
        type: string
        example: '13:37'
        description: 'Format: HH:mm'
      entryGateNumbers:
        type: array
        items:
          type: string
      ticketNumberPrefix:
        type: string
      daysBlockedAfterUse:
        type: integer
        format: int32
      activationDelay:
        $ref: '#/definitions/TimePeriod'
      validityPeriodAfterPurchase:
        $ref: '#/definitions/TimePeriod'
      validityPeriodAfterEntrance:
        $ref: '#/definitions/TimePeriod'
  TicketPersonalization:
    type: object
    properties:
      firstname:
        type: string
      lastname:
        type: string
      customerNumber:
        type: string
      image:
        type: string
        format: byte
  TimePeriod:
    type: object
    properties:
      days:
        type: integer
        format: int32
      hours:
        type: integer
        format: int32
      minutes:
        type: integer
        format: int32
      months:
        type: integer
        format: int32
      seconds:
        type: integer
        format: int32
      weeks:
        type: integer
        format: int32
      years:
        type: integer
        format: int32
  ResultListCreationTask:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/CreationTask'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  Currency:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      centName:
        type: string
      decimalPlaces:
        type: integer
        format: int32
      denominations:
        type: array
        items:
          $ref: '#/definitions/CurrencyDenomination'
      exchangeRates:
        type: array
        items:
          $ref: '#/definitions/CurrencyExchangeRate'
      key:
        type: string
      name:
        type: string
      systemCurrency:
        type: boolean
      symbol:
        type: string
  CurrencyDenomination:
    type: object
    properties:
      type:
        type: string
        enum:
          - COIN
          - BANKNOTE
      value:
        type: number
  CurrencyExchangeRate:
    type: object
    properties:
      factor:
        type: number
      validFrom:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
  ResultListCurrency:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/Currency'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  CustomerDisplayConfiguration:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      fontScale:
        type: integer
        format: int32
      name:
        type: string
      bookingURl:
        type: string
      bookingImageId:
        $ref: '#/definitions/ModelReference'
      closedURL:
        type: string
      closedText:
        type: string
      closedImageId:
        $ref: '#/definitions/ModelReference'
      welcomeText:
        type: string
      welcomeURL:
        type: string
      welcomeImageId:
        $ref: '#/definitions/ModelReference'
      graphicalDisplay:
        type: string
        enum:
          - NONE
          - DISPLAY_1
          - DISPLAY_2
      layoutType:
        type: string
        enum:
          - AD_FULL
          - AD_FULL_WITH_LINE_DISPLAY
          - AD_LEFT
          - AD_LEFT_HALF
          - AD_NONE
          - AD_RIGHT
          - AD_RIGHT_HALF
      themeColor:
        type: string
        enum:
          - GREY
          - RED
          - PINK
          - PURPLE
          - DEEP_PURPLE
          - INDIGO
          - BLUE
          - LIGHT_BLUE
          - CYAN
          - TEAL
          - GREEN
          - LIGHT_GREEN
          - LIME
          - YELLOW
          - AMBER
          - ORANGE
          - DEEP_ORANGE
          - BROWN
  ResultListCustomerDisplayConfiguration:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/CustomerDisplayConfiguration'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  CustomerGroup:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      name:
        type: string
      priceGroup:
        $ref: '#/definitions/ModelReference'
  ResultListCustomerGroup:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/CustomerGroup'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  Coupon:
    type: object
    properties:
      external:
        type: boolean
      number:
        type: string
  CustomerData:
    type: object
    properties:
      name:
        type: string
      phone:
        type: string
  CustomerOrder:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      bookingTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      cashier:
        $ref: '#/definitions/ModelReference'
      comment:
        type: string
      createTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      customer:
        $ref: '#/definitions/ModelReference'
      customerData:
        $ref: '#/definitions/CustomerData'
      deposits:
        type: array
        description: an empty list will not delete existing deposits and will result in an error
        items:
          $ref: '#/definitions/Deposit'
      finishTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      infoTexts:
        type: array
        items:
          type: string
      items:
        type: array
        items:
          $ref: '#/definitions/CustomerOrderItem'
      organizationalUnit:
        $ref: '#/definitions/ModelReference'
      pickUpTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      pointOfSale:
        $ref: '#/definitions/ModelReference'
      readyForPickUp:
        type: boolean
      warehouse:
        $ref: '#/definitions/ModelReference'
  CustomerOrderItem:
    type: object
    properties:
      attendance:
        $ref: '#/definitions/ModelReference'
      bookingTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      commodityGroup:
        $ref: '#/definitions/ModelReference'
      description:
        type: string
      discounts:
        type: array
        items:
          $ref: '#/definitions/Discount'
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      indent:
        type: integer
        format: int32
      index:
        type: integer
        format: int32
        readOnly: true
      infoTexts:
        type: array
        items:
          type: string
      manualPrice:
        type: boolean
      product:
        description: product of the item. Require [number] and optional [id].
        $ref: '#/definitions/ModelReference'
      quantity:
        type: number
      sector:
        $ref: '#/definitions/ModelReference'
      serialNumbers:
        type: array
        uniqueItems: true
        items:
          type: string
      total:
        $ref: '#/definitions/TotalPrice'
  Deposit:
    type: object
    properties:
      account:
        $ref: '#/definitions/ModelReference'
      amount:
        type: number
      receiptNumber:
        type: string
      cashier:
        $ref: '#/definitions/ModelReference'
      createTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
  Discount:
    type: object
    properties:
      couponingAction:
        readOnly: true
        $ref: '#/definitions/ModelReference'
      coupons:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/Coupon'
      label:
        type: string
      receiptDiscount:
        type: boolean
      value:
        type: number
  TaxPayment:
    type: object
    properties:
      amount:
        type: number
      taxRate:
        type: number
      included:
        type: boolean
      salesTax:
        $ref: '#/definitions/ModelReference'
  TotalPrice:
    type: object
    required:
      - base
      - taxPayments
    properties:
      base:
        type: number
        example: 10
        description: 'base price: price of the receipt or itemrow, excluded not included taxes, included discount. example: 19% tax included, 2€ discount included'
      discount:
        type: number
        example: 2
        description: 'discount: discount amount of the receipt or item row. base + discount = undiscounted base price.'
      gross:
        type: number
        example: 10.7
        description: 'gross price: base + not includes taxes. example: 19% tax included, 7% tax excluded'
      net:
        type: number
        example: 8.4
        description: 'base price: price of the receipt or itemrow, excluded all taxes. example: every taxes excluded'
      taxPayments:
        type: array
        description: 'taxPayments: detailed tax information. could also be used to calculate the gross and net price depending on the base price'
        items:
          $ref: '#/definitions/TaxPayment'
    description: Contains all price-related information
  ResultListCustomerOrder:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/CustomerOrder'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  AddressInformation:
    type: object
    properties:
      addressLine1:
        type: string
      addressLine2:
        type: string
      city:
        type: string
      company:
        type: string
      country:
        type: string
      department:
        type: string
      state:
        type: string
      zipCode:
        type: string
  Customer:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      address:
        $ref: '#/definitions/AddressInformation'
      birthday:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      cards:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/CustomerCard'
      company:
        type: string
      customerGroup:
        $ref: '#/definitions/ModelReference'
      economicZone:
        $ref: '#/definitions/ModelReference'
      email:
        type: string
      externalId:
        type: string
      firstname:
        type: string
      gender:
        type: string
        enum:
          - MALE
          - FEMALE
      informations:
        type: array
        items:
          $ref: '#/definitions/CustomerInformation'
      lastname:
        type: string
      phone:
        type: string
      taxId:
        type: string
      privacyPolicyAccepted:
        type: boolean
      marketingContactPermitted:
        type: boolean
      createTime:
        type: string
        format: date
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
        readOnly: true
      lastReceiptTime:
        type: string
        format: date
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
        readOnly: true
      useEmailForDigitalReceipt:
        type: boolean
  CustomerCard:
    type: object
    properties:
      number:
        type: string
      type:
        type: string
        enum:
          - CREDIT
          - DEBIT
          - FRIENDSBONUS
  CustomerInformation:
    type: object
    properties:
      creatorName:
        type: string
      date:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      text:
        type: string
  ResultListCustomer:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/Customer'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  DeliveryNote:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      bookingTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      cashier:
        $ref: '#/definitions/ModelReference'
      comment:
        type: string
      customer:
        $ref: '#/definitions/ModelReference'
      deliveryTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      finalized:
        type: boolean
        readOnly: true
      items:
        type: array
        items:
          $ref: '#/definitions/DeliveryNoteItem'
      orderNumber:
        type: string
      organizationalUnit:
        $ref: '#/definitions/ModelReference'
      pointOfSale:
        $ref: '#/definitions/ModelReference'
      signature:
        $ref: '#/definitions/Signature'
      total:
        description: calculated by accumulation of items total
        readOnly: true
        $ref: '#/definitions/TotalPrice'
  DeliveryNoteItem:
    type: object
    properties:
      product:
        $ref: '#/definitions/ModelReference'
      quantity:
        type: number
      serialNumbers:
        type: array
        items:
          type: string
      sector:
        $ref: '#/definitions/ModelReference'
      commodityGroup:
        $ref: '#/definitions/ModelReference'
      indent:
        type: integer
        format: int32
      total:
        $ref: '#/definitions/TotalPrice'
      infoTexts:
        type: array
        items:
          type: string
  Signature:
    type: object
    properties:
      image:
        type: string
        format: byte
      transcription:
        type: string
      date:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
  ResultListDeliveryNote:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/DeliveryNote'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  DeviceConfigurationVariable:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      name:
        type: string
  ResultListDeviceConfigurationVariable:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/DeviceConfigurationVariable'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  EconomicZone:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      name:
        type: string
  ResultListEconomicZone:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/EconomicZone'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  EntryGate:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      hasChildren:
        type: boolean
      name:
        type: string
      parentEntryGate:
        $ref: '#/definitions/ModelReference'
  ResultListEntryGate:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/EntryGate'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  Capacity:
    type: object
    properties:
      available:
        type: integer
        format: int64
      total:
        type: integer
        format: int64
  Category:
    type: object
    properties:
      name:
        type: string
      product:
        $ref: '#/definitions/ModelReference'
      externalId:
        type: string
  Event:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      capacity:
        $ref: '#/definitions/Capacity'
      categories:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/Category'
      duration:
        $ref: '#/definitions/TimePeriod'
      location:
        type: string
      name:
        type: string
      start:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      tags:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/ModelReference'
      description:
        type: string
  ResultListEvent:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/Event'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  ExternalSystemCall:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      name:
        type: string
      displayUrl:
        type: string
      displayUrlPost:
        type: boolean
      systemUrl:
        type: string
      login:
        type: string
      password:
        type: string
      connectTimeoutMillis:
        type: integer
        format: int32
      requestTimeoutMillis:
        type: integer
        format: int32
      customerDisplayUrl:
        type: string
      deactivated:
        type: boolean
        readOnly: true
  ResultListExternalSystemCall:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/ExternalSystemCall'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  FiscalUnit:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      adminPin:
        type: string
      adminPuk:
        type: string
      certificate:
        $ref: '#/definitions/FiscalUnitCertificateInfo'
      logTimeFormat:
        type: string
      name:
        type: string
      processDataEncoding:
        type: string
      publicKey:
        type: string
        format: byte
        description: public key of the fiscal unit. Value can only be set on create and is not changeable on update.
      signatureAlgorithm:
        type: string
      state:
        $ref: '#/definitions/FiscalUnitState'
      timeAdminPin:
        type: string
      type:
        type: string
        enum:
          - EFSTA
          - FISKALY
          - SWISSBIT
          - SWISSBIT_LAN
      apiKey:
        type: string
      apiSecret:
        type: string
      remoteUrl:
        type: string
  FiscalUnitCertificateInfo:
    type: object
    properties:
      data:
        type: string
        format: byte
        description: log message certificate of the fiscal unit. Value can only be set on create and is not changeable on update.
      expirationDate:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
  FiscalUnitState:
    type: object
    properties:
      additionalInformation:
        type: object
        additionalProperties:
          type: string
      errorDescription:
        type: string
      setupFailed:
        type: boolean
      usageLevel:
        $ref: '#/definitions/FiscalUnitStateUsageLevel'
      versions:
        $ref: '#/definitions/FiscalUnitStateVersionInfo'
      workingState:
        type: string
        enum:
          - DECOMMISSIONED
          - INITIALIZED
          - UNINITIALIZED
  FiscalUnitStateUsageLevel:
    type: object
    properties:
      registeredClients:
        $ref: '#/definitions/FiscalUnitStateUsageLevelValue'
      createdSignatures:
        $ref: '#/definitions/FiscalUnitStateUsageLevelValue'
      storedBytes:
        $ref: '#/definitions/FiscalUnitStateUsageLevelValue'
      unfinishedTransactions:
        $ref: '#/definitions/FiscalUnitStateUsageLevelValue'
  FiscalUnitStateUsageLevelValue:
    type: object
    properties:
      current:
        type: integer
        format: int64
      limit:
        type: integer
        format: int64
  FiscalUnitStateVersionInfo:
    type: object
    properties:
      api:
        type: string
      hardware:
        type: string
      software:
        type: string
  ResultListFiscalUnit:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/FiscalUnit'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  InfoText:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      text:
        type: string
      type:
        type: string
        enum:
          - ITEM
          - POPUP
          - RECEIPT
      image:
        $ref: '#/definitions/ModelReference'
  ResultListInfoText:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/InfoText'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  Inventory:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      automaticBooking:
        type: boolean
      automaticBookingAfterDays:
        type: integer
        format: int32
        description: only if isAutomaticBooking=true
      checkProductAssortmentValidity:
        type: boolean
      checkProductListing:
        type: boolean
      createTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      description:
        type: string
      executionDays:
        type: array
        description: only if type=PERPETUAL_INVENTORY
        uniqueItems: true
        items:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
      executionTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      hasBookedReceipts:
        type: boolean
        readOnly: true
      maxProductsPerList:
        type: integer
        format: int32
        description: only if type=ANNUAL_INVENTORY | INVENTORY_IRREGULARITY
      oneCommodityGroupPerInventoryList:
        type: boolean
        description: only if type=ANNUAL_INVENTORY | INVENTORY_IRREGULARITY
      onlyNegativeProductStocks:
        type: boolean
        description: only if type=INVENTORY_IRREGULARITY
      organizationalUnits:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/ModelReference'
      productFilter:
        type: string
        enum:
          - ACTIVE
          - ALL
          - DEACTIVATED
      type:
        type: string
        enum:
          - ANNUAL_INVENTORY
          - INVENTORY_IRREGULARITY
          - INVENTORY_SAMPLING
          - PERPETUAL_INVENTORY
  ResultListInventory:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/Inventory'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  MethodNotAllowedError:
    type: object
    properties:
      message:
        type: string
        description: a short description of the error in english
      code:
        type: string
        description: the code for client-side evaluation of the error
        enum:
          - NOT_PERMITTED
  InventoryList:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      bookingTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
        readOnly: true
      bookingUser:
        readOnly: true
        $ref: '#/definitions/ModelReference'
      bookingApiUser:
        readOnly: true
        $ref: '#/definitions/ModelReference'
      cashier:
        readOnly: true
        $ref: '#/definitions/ModelReference'
      createTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
        readOnly: true
      description:
        type: string
      finishTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
        readOnly: true
      inventory:
        description: not set if value is retrieved via inventory path
        readOnly: true
        $ref: '#/definitions/ModelReference'
      modifiedTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
        readOnly: true
      organizationalUnit:
        description: not set if value is retrieved via organizational unit path
        readOnly: true
        $ref: '#/definitions/ModelReference'
      pointOfSale:
        readOnly: true
        $ref: '#/definitions/ModelReference'
      status:
        type: string
        readOnly: true
        enum:
          - BOOKED
          - IN_PROGRESS
  InventoryListItem:
    type: object
    properties:
      averagePurchasePrice:
        type: number
      index:
        type: integer
        format: int32
      product:
        $ref: '#/definitions/ModelReference'
      revision:
        type: integer
        format: int64
        readOnly: true
      stock:
        $ref: '#/definitions/InventoryListItemStock'
      stockDifferenceReason:
        type: string
  InventoryListItemStock:
    type: object
    properties:
      actual:
        type: number
      nominal:
        type: number
  ResultListInventoryListItem:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/InventoryListItem'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  ResultListInventoryList:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/InventoryList'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  CloudSubscription:
    type: object
    properties:
      status:
        type: string
        enum:
          - ACTIVE
          - FREE
          - INACTIVE
      validTo:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
  CloudSubscriptionDetails:
    type: object
    properties:
      amount:
        type: integer
        format: int32
      packageType:
        type: string
        enum:
          - FOOD
          - FRANCHISE
          - INTEGRATION
          - INVOICING
          - PLUS
          - RETAIL
          - SUPPORT
          - TICKET
          - VOUCHER
          - TSE_BACKUP
  CompanyIdentification:
    type: object
    properties:
      gln:
        type: string
      taxId:
        type: string
  KoronaAccount:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      activePackageDetails:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/CloudSubscriptionDetails'
      activePackages:
        type: array
        uniqueItems: true
        items:
          type: string
          enum:
            - FOOD
            - FRANCHISE
            - INTEGRATION
            - INVOICING
            - PLUS
            - RETAIL
            - SUPPORT
            - TICKET
            - VOUCHER
            - TSE_BACKUP
      address:
        $ref: '#/definitions/AddressInformation'
      cloudSubscription:
        $ref: '#/definitions/CloudSubscription'
      company:
        type: string
      identification:
        $ref: '#/definitions/CompanyIdentification'
      testMode:
        type: boolean
  DayRating:
    type: object
    properties:
      cashier:
        $ref: '#/definitions/ModelReference'
      comment:
        type: string
      date:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      id:
        type: string
        readOnly: true
      organizationalUnit:
        $ref: '#/definitions/ModelReference'
      rating:
        $ref: '#/definitions/Rating'
      receipts:
        type: integer
        format: int64
      revenue:
        type: number
      visitors:
        type: integer
        format: int64
      weather:
        $ref: '#/definitions/Weather'
  Rating:
    type: object
    properties:
      assortment:
        type: integer
        format: int32
      customers:
        type: integer
        format: int32
      employees:
        type: integer
        format: int32
  Weather:
    type: object
    properties:
      code:
        type: integer
        format: int32
      temperature:
        type: integer
        format: int32
      temperatureUnit:
        type: string
        enum:
          - CELSIUS
          - FAHRENHEIT
          - KELVIN
  OpeningHours:
    type: object
    properties:
      weekDay:
        type: string
        enum:
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
          - SATURDAY
          - SUNDAY
      from:
        type: string
        example: '13:37'
        description: 'Format: HH:mm'
      to:
        type: string
        example: '13:37'
        description: 'Format: HH:mm'
  OrganizationalUnit:
    type: object
    required:
      - name
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      address:
        $ref: '#/definitions/AddressInformation'
      costCenter:
        readOnly: true
        $ref: '#/definitions/ModelReference'
      economicZone:
        $ref: '#/definitions/ModelReference'
      ehNumber:
        type: integer
        format: int64
      identification:
        $ref: '#/definitions/CompanyIdentification'
      name:
        type: string
      openingHours:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/OpeningHours'
      parentOrganizationalUnit:
        $ref: '#/definitions/ModelReference'
      priceGroup:
        $ref: '#/definitions/ModelReference'
      warehouse:
        type: boolean
  ResultListDayRating:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/DayRating'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  Amount:
    type: object
    properties:
      actual:
        type: number
      lent:
        type: number
      maxLevel:
        type: number
      ordered:
        type: number
      reorderLevel:
        type: number
  ProductStock:
    type: object
    properties:
      amount:
        $ref: '#/definitions/Amount'
      averagePurchasePrice:
        type: number
      product:
        description: reference is only set if access-path is not through products
        $ref: '#/definitions/ModelReference'
      revision:
        type: integer
        format: int64
        readOnly: true
      warehouse:
        description: reference is only set if access-path is not through organizational unit
        $ref: '#/definitions/ModelReference'
  ResultListProductStock:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/ProductStock'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  ProductTransferInvolvedPartyInformation:
    type: object
    properties:
      buyer:
        $ref: '#/definitions/ProductTransferInvolvedPartyInformationData'
      deliveryAddress:
        $ref: '#/definitions/ProductTransferInvolvedPartyInformationData'
      finalRecipient:
        $ref: '#/definitions/ProductTransferInvolvedPartyInformationData'
      invoiceRecipient:
        $ref: '#/definitions/ProductTransferInvolvedPartyInformationData'
      supplier:
        $ref: '#/definitions/ProductTransferInvolvedPartyInformationData'
      transportServiceProvider:
        $ref: '#/definitions/ProductTransferInvolvedPartyInformationData'
  ProductTransferInvolvedPartyInformationData:
    type: object
    properties:
      address:
        $ref: '#/definitions/AddressInformation'
      company:
        type: string
      identification:
        $ref: '#/definitions/CompanyIdentification'
  ResultListStockReceipt:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/StockReceipt'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  StockReceipt:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      arrivalDate:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      bookingTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      bookingUser:
        $ref: '#/definitions/ModelReference'
      bookingApiUser:
        $ref: '#/definitions/ModelReference'
      cashier:
        $ref: '#/definitions/ModelReference'
      createTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      createUser:
        $ref: '#/definitions/ModelReference'
      customer:
        $ref: '#/definitions/ModelReference'
      description:
        type: string
      dispatchNotification:
        $ref: '#/definitions/ModelReference'
      itemsCount:
        type: integer
        format: int32
      organizationalUnit:
        description: not set if value is retrieved via organizational unit path
        $ref: '#/definitions/ModelReference'
      partyInformation:
        $ref: '#/definitions/ProductTransferInvolvedPartyInformation'
      pointOfSale:
        $ref: '#/definitions/ModelReference'
      productStockOrder:
        $ref: '#/definitions/ModelReference'
      sourceOrganizationalUnit:
        $ref: '#/definitions/ModelReference'
      supplier:
        $ref: '#/definitions/ModelReference'
      comment:
        type: string
      customPriceChange:
        type: number
        readOnly: true
      status:
        type: string
        readOnly: true
        enum:
          - BOOKED
          - IN_PROGRESS
  ResultListOrganizationalUnit:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/OrganizationalUnit'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  PaymentMethod:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      allowedBalanceDifference:
        type: number
      currency:
        $ref: '#/definitions/ModelReference'
      forceCustomerNumber:
        type: boolean
      forcePrint:
        type: boolean
      name:
        type: string
      paymentService:
        $ref: '#/definitions/Service'
      printCopies:
        type: integer
        format: int32
      tag:
        $ref: '#/definitions/ModelReference'
      useCashDrawer:
        type: boolean
      revenueAccount:
        $ref: '#/definitions/ModelReference'
      attachPaymentTerminalDataToReceipt:
        type: boolean
      maxPaymentSum:
        type: number
  Service:
    type: object
    properties:
      parameter:
        type: string
      type:
        type: string
        enum:
          - CASH
          - MERCHANTWARE
          - MERCURY
          - LEGACY_ZVT
          - KORONA_PREPAID
          - CREDIT_AUTHORIZATION_TERMINAL
  ResultListPaymentMethod:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/PaymentMethod'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  PosButton:
    type: object
    properties:
      color:
        type: string
        enum:
          - BLUE
          - CYAN
          - GREEN
          - MAGENTA
          - NONE
          - ORANGE
          - RED
          - YELLOW
      column:
        type: integer
        format: int32
      row:
        type: integer
        format: int32
      functionSequence:
        type: array
        items:
          $ref: '#/definitions/PosButtonFunction'
      name:
        type: string
      size:
        type: string
        enum:
          - ONE_BY_ONE
          - TWO_BY_ONE
          - ONE_BY_TWO
          - TWO_BY_TWO
      authorizationConditionCashierRole:
        $ref: '#/definitions/ModelReference'
      authorizationConditionFourEyes:
        type: boolean
  PosButtonFunction:
    type: object
    properties:
      product:
        $ref: '#/definitions/ModelReference'
      macro:
        type: string
        enum:
          - SEND_SALES_DATA
          - ADJUST_PAYMENT
          - SELECT_ALL
          - EXIT_APPLICATION
          - APPLY_PAYMENT_TIP
          - SHOW_PRODUCT_SEARCH
          - TOGGLE_AUTO_RECEIPT_PRINT
          - OPEN_RECEIPT_VIA_ORDER_NUMBER
          - SHOW_RECEIPT_ARCHIVE
          - COPY_TOTAL_TO_INPUT
          - PRINT_TREAT_RECEIPT
          - CANCEL_RECEIPT
          - PARK_RECEIPT
          - PRINT
          - ENABLE_PRINT_PREVIEW
          - DISABLE_PRINT_PREVIEW
          - ENTER
          - CLEAR_INPUT
          - BACKSPACE
          - MANUFACTURE
          - BACKGROUND_IMAGE
          - BALANCE
          - BALANCE_POS
          - OPEN_CASHDRAWER
          - PRINT_POS_MONTH_REPORT
          - PRINT_POS_REPORT
          - PRINT_POS_WEEK_REPORT
          - CASHIER_QUICK_CHANGE
          - PRINT_CASHIER_REPORT
          - CHANGE_CASHIER
          - SHOW_KORONA_INFO
          - COST_ACCOUNT
          - CUSTOMER_GROUP
          - DESELECT
          - BIND_ITEMS
          - ADD_FREE_INFO_TEXT
          - REMOVE_INFO_TEXTS
          - SPLIT_ITEMS
          - TRANSFER_ITEMS
          - ITEM_SEQUENCE
          - ITEM_INFO_TEXT
          - CHANGE_QUANTITY
          - CHANGE_PRICE
          - ITEM_DISCOUNT
          - REOPEN_RECEIPT
          - RETURN
          - TOGGLE_QUICK_KEY_MODE
          - SCROLL_UP
          - SCROLL_DOWN
          - SELECT
          - VOID_ITEM
          - VOID_RECEIPT
          - FINISH_DAY
          - KEY_0
          - KEY_1
          - KEY_2
          - KEY_3
          - KEY_4
          - KEY_5
          - KEY_6
          - KEY_7
          - KEY_8
          - KEY_9
          - KEY_COMMA
          - KEY_PERIOD
          - KEY_MULT
          - KEY_MINUS
          - SHOW_BUTTONLAYOUT
          - TOTAL
          - TOGGLE_SECTOR
          - TOGGLE_SECTOR_DEFAULT
          - TOGGLE_SECTOR_ALTERNATIV
          - PAYMENT
          - BIND_PAYMENTS
          - RETRIEVE_MASTER_DATA
          - SHOW_HANDHELD_MANAGER
          - SHOW_TICKETCHECK
          - SHOW_TABLEOVERVIEW
          - SET_ORDER_NUMBER
          - STOCK_RECEIPT
          - INVENTORY_RECEIPT
          - TIME_TRACKING
          - SHOW_LABEL_PRINT_PAGE
          - COPY_RECEIPT_DATA
          - PRICE_INFO
          - CHECK_PREPAID_ACCOUNT
          - EVENT_SALES_PAGE
          - EVENT_PRESALES_PAGE
          - SET_CUSTOMER_NUMBER
          - CUSTOMER_LOOKUP
          - SHOW_CUSTOMER
          - SHOW_RECEIPT_CUSTOMER
          - REVISION
          - PREPARATION_RECEIPT
          - STOCK_RETURN
          - PRINT_GIFT_RECEIPT
          - SHOW_ITEM_INFO_TEXT_SELECTION
          - SHOW_OPEN_STOCK_MANAGEMENT_RECEIPTS
          - SAVE_STOCK_MANAGEMENT_RECEIPT
          - PRODUCTTEXT_ALLERGENS
          - PRODUCTTEXT_MANUAL
          - PRODUCTTEXT_DESCRIPTION
          - PRODUCTTEXT_INGREDIENTS
          - PRODUCTTEXT_NUTRITIONAL_VALUE
          - PRODUCTTEXT_CARE_INSTRUCTIONS
          - PRODUCTTEXT_RECIPE
          - PRODUCTTEXT_CERTIFICATE
          - RESTART_POS
          - SET_CUSTOMER_BY_NR
          - CASHIER_PAUSE
          - CASH_VOID
          - CANCEL
          - ZVT_ENDOFDAY
          - ZVT_CLAIM
          - ZVT_RELEASE
          - CREDIT_AUTHORIZATION_TERMINAL_DIAGNOSIS
          - CREDIT_AUTHORIZATION_TERMINAL_REPEAT_RECEIPT
          - CREDIT_AUTHORIZATION_TERMINAL_INITIALZATION
          - CREDIT_AUTHORIZATION_TERMINAL_CONFIGURATION
          - CREATE_STORE_ORDERS
          - LOAD_STORE_ORDERS
          - CHANGE_BOOKING
          - LIST_STOCKS_BY_PRODUCT
          - FIND_BOOKING
          - SET_RECEIPT_DISCOUNT_PERCENT
          - SET_RECEIPT_DISCOUNT_SUBTRACTION
          - BLOYAL_SNIPPET_FIND_CUSTOMER
          - BLOYAL_SNIPPET_QUICK_SIGNUP
          - BLOYAL_SNIPPET_APPLY_COUPON
          - BLOYAL_SNIPPET_RECORD_VISIT
          - BLOYAL_SNIPPET_VIEW_CUSTOMER
          - BLOYAL_SNIPPET_CREATE_ORDER
          - BLOYAL_SNIPPET_RETURN_ORDER
          - BLOYAL_SNIPPET_CHECK_INVENTORY
          - CLEAR_BUTTON_STATUS
          - SWITCH_BUTTON_STATUS
          - CROSS_SELLING
          - TOGGLE_OSK
          - LOAD_RECEIPT
          - DEACTIVATE_OVERRIDE
          - DENOMINATION_INPUT
          - SWITCH_BLOYAL_STATE
          - EXCHANGE_SALE
          - RECEIPT_PRINT
          - SHOW_RETURN_PAGE
          - SHOW_RETURN_PAGE_WITH_CURRENT_RECEIPT
          - CASH_CHECK
          - ADVANCED_BOOKINGEDITING
          - SHOW_PREAUTH_PAYMENTS
          - SHOW_TAG_BUTTON_LAYOUT
          - TARGET_PRICE_DISCOUNT
          - SYNCHRONIZE_DATA_TO_BARCODE_SCANNER
          - DOWNLOAD_BARCODE_DATA_TO_POS
          - APPLY_SPECIAL_OFFER
          - SHOW_GODB_EXPORT
          - SET_SERIAL
          - CHANGE_ECONOMIC_ZONE
          - CUSTOMER_ORDER_SEARCH
          - CUSTOMER_ORDER_CREATE
          - CUSTOMER_ORDER_EDIT
          - ROUND_RECEIPT_TOTAL_DOWN
          - SET_SALE_SELLER
          - SWITCH_BATCH_PRINTING
          - ACTIVATE_BATCH_PRINTING
          - DEACTIVATE_BATCH_PRINTING
          - DEACTIVATE_PRODUCER_PRINTING
          - SET_PERCENTAGE_OF_RECEIPTTOTAL
          - SHOW_PAYMENT_PAGE
          - SET_COUPONING_CAMPAIGN_CARD
          - EVENT_SALE
          - EVENT_OVERVIEW_PRINT
          - EVENT_OVERVIEW_SHOW
          - CREATE_EVENT_RESOURCE
          - KEY_UPPER_A
          - KEY_UPPER_B
          - KEY_UPPER_C
          - KEY_UPPER_D
          - KEY_UPPER_E
          - KEY_UPPER_F
          - KEY_UPPER_G
          - KEY_UPPER_H
          - KEY_UPPER_I
          - KEY_UPPER_J
          - KEY_UPPER_K
          - KEY_UPPER_L
          - KEY_UPPER_M
          - KEY_UPPER_N
          - KEY_UPPER_O
          - KEY_UPPER_P
          - KEY_UPPER_Q
          - KEY_UPPER_R
          - KEY_UPPER_S
          - KEY_UPPER_T
          - KEY_UPPER_U
          - KEY_UPPER_V
          - KEY_UPPER_W
          - KEY_UPPER_X
          - KEY_UPPER_Y
          - KEY_UPPER_Z
          - KEY_LOWER_A
          - KEY_LOWER_B
          - KEY_LOWER_C
          - KEY_LOWER_D
          - KEY_LOWER_E
          - KEY_LOWER_F
          - KEY_LOWER_G
          - KEY_LOWER_H
          - KEY_LOWER_I
          - KEY_LOWER_J
          - KEY_LOWER_K
          - KEY_LOWER_L
          - KEY_LOWER_M
          - KEY_LOWER_N
          - KEY_LOWER_O
          - KEY_LOWER_P
          - KEY_LOWER_Q
          - KEY_LOWER_R
          - KEY_LOWER_S
          - KEY_LOWER_T
          - KEY_LOWER_U
          - KEY_LOWER_V
          - KEY_LOWER_W
          - KEY_LOWER_X
          - KEY_LOWER_Y
          - KEY_LOWER_Z
          - RENTAL_SEARCH
          - RENTAL_CREATE
          - RENTAL_EDIT
          - QUOTE_SEARCH
          - QUOTE_CREATE
          - QUOTE_EDIT
          - DELIVERY_NOTE_SEARCH
          - DELIVERY_NOTE_CREATE
          - DELIVERY_NOTE_EDIT
          - DEPOSIT_REFUNDMODE_SWITCH
          - DEPOSIT_REFUNDMODE_ACTIVATE
          - DEPOSIT_REFUNDMODE_DEACTIVATE
          - RECORD_START_COMMAND_ID
          - RECORT_END_COMMAND_ID
          - ADD_SALEITEM_DISCOUNT
          - ADD_CHANGE_CARRY_FORWARD
          - ADD_AUTOMATIC_CHANGE_CARRY_FORWARD
          - ADD_CHANGE_CARRY_FORWARD_DIFF
          - ADD_AUTOMATIC_CHANGE_CARRY_FORWARD_DIFF
          - CENTRAL_BALANCE
          - CENTRAL_BALANCE_POS
          - COMBINE_SALE_ITEMS
          - ACTIVATE_COMBINE_SALE_ITEMS
          - DEACTIVATE_COMBINE_SALE_ITEMS
          - SWITCH_CONTAINER_MODE
          - CONVERT_CONTAINER_TO_SINGLE_ITEM
          - CONVERT_SINGLE_ITEM_TO_CONTAINER_BY_CAPACITY
          - CONVERT_SINGLE_ITEM_TO_CONTAINER_BY_NUMBER
          - EXTRACT_DEPOSIT_ITEMS
          - REMOVE_SUB_PRODUCTS_FROM_CONTAINER
          - ACTIVATE_MANDATORY_SIGNATURE_ON_RECEIPT
          - DEACTIVATE_MANDATORY_SIGNATURE_ON_RECEIPT
          - SWITCH_MANDATORY_SIGNATURE_ON_RECEIPT
          - CREATE_VOUCHER
          - REDEEM_VOUCHER
          - CANCEL_VOUCHER
          - SHOW_VOUCHER
          - SET_RECEIPT_FINALIZATION_LOCK
          - REMOVE_RECEIPT_FINALIZATION_LOCK
          - TSE_SETUP_FORM
          - SET_SALE_ITEM_SELECTION_MODE_SINGLE
          - SET_SALE_ITEM_SELECTION_MODE_MULTI
          - SET_DIGITAL_RECEIPT_EMAIL
          - MACRO_CHANGE_ORG_ONCE_ON_RECEIPT
          - MACRO_CHANGE_ORG_ON_RECEIPTS
          - MACRO_CHANGE_PRICE_GROUP
          - MACRO_REMOVE_ALL_COUPONS_FROM_RECEIPT
          - UPLOAD_POS_JOURNAL
          - CANCEL_SALE_IMMEDIATELY
          - BARCODE_SCANNER_ACTIVATE
          - BARCODE_SCANNER_DEACTIVATE
          - BARCODE_SCANNER_SUCCESS_SIGNAL
          - BARCODE_SCANNER_FAILURE_SIGNAL
          - RETURN_ITEM
          - RECEIPT_REVERSAL
      paymentMethod:
        $ref: '#/definitions/ModelReference'
      buttonLayout:
        $ref: '#/definitions/ModelReference'
      infoText:
        $ref: '#/definitions/ModelReference'
      customerGroup:
        $ref: '#/definitions/ModelReference'
      account:
        $ref: '#/definitions/ModelReference'
      type:
        type: string
        enum:
          - PRODUCT
          - BUTTON_LAYOUT
          - MACRO
          - PAYMENT_METHOD
          - CUSTOMER_GROUP
          - ACCOUNT
          - ITEM_SEQUENCE
          - INFO_TEXT
          - BUTTON_STATUS
          - CHARACTER_STRING
          - EXTERNAL_SYSTEM_CALL
          - CHARACTER
          - PRODUCT_TAG
          - INTERNAL_SYSTEM_CALL
      tag:
        $ref: '#/definitions/ModelReference'
      buttonStatus:
        type: string
        enum:
          - NONE
          - GREEN
          - YELLOW
          - RED
          - HIDDEN
      externalSystemCall:
        $ref: '#/definitions/ModelReference'
  PosButtonLayout:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      name:
        type: string
      buttons:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/PosButton'
      size:
        type: string
        enum:
          - SMALL
          - BIG
          - WIDE
  ResultListPosButtonLayout:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/PosButtonLayout'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  PosPageLayout:
    type: object
    properties:
      page:
        type: string
        enum:
          - RECEIPT_ARCHIVE
          - BOOKING
          - PAYMENT
          - RECEIPTS
          - BALANCE
          - LOGIN
      quickButtonLayout:
        $ref: '#/definitions/ModelReference'
      tabOne:
        $ref: '#/definitions/ModelReference'
      tabTwo:
        $ref: '#/definitions/ModelReference'
      tabThree:
        $ref: '#/definitions/ModelReference'
  PosPageLayoutConfiguration:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      name:
        type: string
      pageLayouts:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/PosPageLayout'
      quickButtonMode:
        type: boolean
      totalButton:
        $ref: '#/definitions/PosButton'
  ResultListPosPageLayoutConfiguration:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/PosPageLayoutConfiguration'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  DeviceConfiguration:
    type: object
    properties:
      port:
        type: string
        enum:
          - SYSTEMPRINTER_DEFAULT
          - COM1
          - COM2
          - COM3
          - COM4
          - COM5
          - COM6
          - COM7
          - USB_COM1
          - USB_COM2
          - USB_COM3
          - USB_COM4
          - USB_COM5
          - USB_COM6
          - USB_COM7
          - LPT1
          - LPT2
          - LPT3
          - USB_LPT1
          - USB_LPT2
          - NETWORK
          - COMMAND
          - CASHDRAWER_DEAMON_WINDOWS
          - CASHDRAWER_DEAMON_LINUX
          - USB_ACM1
          - USB_ACM2
          - USB_ACM3
          - USB_ACM4
          - USB_ACM5
          - USB_ACM6
          - USB_ACM7
      device:
        type: string
        enum:
          - ESC_PRINTER
          - WINCOR_PRINTER
          - EPSON_PRINTER
          - TEXT_PRINTER
          - DEFAULT_BARCODE_READER
          - DSP800_DISPLAY
          - ESC_CUSTOMER_DISPLAY
          - CD7220_DISPLAY
          - WINCOR_KEY_LOCK
          - JB1300_KEY_LOCK
          - ADDIMAT_KEY_LOCK
          - ESC_DRAWER
          - BOCA_PRINTER
          - ZEBRA_PRINTER
          - EPSON_TM_L90_PRINTER
          - DEFAULT_ZVT_CREDIT_AUTHORIZATION_TERMINAL
          - SOVATO_CUSTOMER_DISPLAY
          - KORONA_CASH_DRAWER
          - DEFAULT_PAX_CREDIT_AUTHORIZATION_TERMINAL
          - ZEBRA_LP_2824_PRINTER
          - HP_PRINTER
          - ZEBRA_TTP_2000_PRINTER
          - DEFAULT_SIX_CREDIT_AUTHORIZATION_TERMINAL
          - SCANPAL2_BARCODE_SCANNER
          - MAXIM_INTEGRATED_KEY_LOCK
          - TOSHIBA_KEY_LOCK
          - DEFAULT_VERIFONE_POINT_CREDIT_AUTHORIZATION_TERMINAL
          - BA63_CUSTOMER_DISPLAY
          - DEFAULT_PAYWORKS_CREDIT_AUTHORIZATION_TERMINAL
          - DEFAULT_GENIUS_CREDIT_AUTHORIZATION_TERMINAL
          - TOSHIBA_DISPLAY
          - JARLTECH_CUSTOMER_DISPLAY
          - DEFAULT_ECONDUIT_CREDIT_AUTHORIZATION_TERMINAL
          - ADYEN_CREDIT_AUTHORIZATION_TERMINAL
          - AURES_PRINTER
      baudRate:
        type: string
        enum:
          - LINUX_9600
          - LINUX_19200
          - WIN_9600
          - WIN_19200
          - NONE
      initCommand:
        type: string
      initCommandVariable:
        $ref: '#/definitions/ModelReference'
      portParameter:
        type: string
      portParameterVariable:
        $ref: '#/definitions/ModelReference'
      defaultDevice:
        type: boolean
      deviceParameters:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/DeviceParameterItem'
  DeviceParameterItem:
    type: object
    properties:
      variable:
        $ref: '#/definitions/ModelReference'
      parameterKey:
        type: string
      parameterValue:
        type: string
  PaymentServiceConfiguration:
    type: object
    properties:
      merchantSiteId:
        type: string
      merchantName:
        type: string
      merchantKey:
        type: string
      deviceUrl:
        type: string
      serviceType:
        type: string
        enum:
          - CASH
          - DEFAULT_PAYMENT_TYPE
          - MERCHANTWARE
          - MERCURY
          - LEGACY_ZVT
          - KORONA_PREPAID
          - CREDIT_AUTHORIZATION_TERMINAL
  PosProfile:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      name:
        type: string
      automaticCashierLogoutInterval:
        $ref: '#/definitions/TimePeriod'
      autoReceiptPrint:
        type: boolean
      forceClosedDrawer:
        type: boolean
      maxBalanceAttempts:
        type: integer
        format: int32
      orderNumberRequired:
        type: boolean
      paymentServiceConfigurations:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/PaymentServiceConfiguration'
      deviceProfileConfigurations:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/DeviceConfiguration'
      tableServiceInterval:
        $ref: '#/definitions/TimePeriod'
      receiptLayoutConfiguration:
        $ref: '#/definitions/ModelReference'
      automaticEndOfDayInterval:
        $ref: '#/definitions/TimePeriod'
      centInput:
        type: boolean
      requirePaymentAmountInput:
        type: boolean
      kioskMode:
        type: boolean
      wideScreenLayout:
        type: boolean
      automaticPaymentFinalization:
        type: boolean
      autoResetQuickAccessPad:
        type: boolean
      easyRepeatProductEnabled:
        type: boolean
      externalSystemCallsOnBookReceipt:
        type: array
        items:
          $ref: '#/definitions/ModelReference'
      externalSystemCallsOnRejectReceipt:
        type: array
        items:
          $ref: '#/definitions/ModelReference'
      externalSystemCallsOnTotalReceipt:
        type: array
        items:
          $ref: '#/definitions/ModelReference'
      externalSystemCallsOnVoidReceipt:
        type: array
        items:
          $ref: '#/definitions/ModelReference'
      externalSystemCallsOnBookDeliveryNote:
        type: array
        items:
          $ref: '#/definitions/ModelReference'
      externalSystemCallsOnLoginCashier:
        type: array
        items:
          $ref: '#/definitions/ModelReference'
      externalSystemCallsOnLogoutCashier:
        type: array
        items:
          $ref: '#/definitions/ModelReference'
      designateBalanceDifference:
        type: boolean
      endOfDayReportEnabled:
        type: boolean
      unknownNumberAction:
        type: string
        enum:
          - CARRY_ON_WITH_MESSAGE
          - HOLD_ON_WITH_DIALOG
          - EXTERNAL_SYSTEM_CALL
      unknownNumberExternalSystemCall:
        $ref: '#/definitions/ModelReference'
      invoicingReceiptCopies:
        type: integer
        format: int32
      cashierPasswordRequired:
        type: boolean
      posTheme:
        type: string
        enum:
          - CLASSIC
          - FLAT
      templateProduct:
        $ref: '#/definitions/ModelReference'
      digitalReceipt:
        type: boolean
      digitalSignature:
        type: boolean
      automaticCustomerCreationFromCustomerOrder:
        type: boolean
      masterDataRefreshInterval:
        $ref: '#/definitions/TimePeriod'
  ResultListPosProfile:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/PosProfile'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  AccountSummary:
    type: object
    properties:
      account:
        $ref: '#/definitions/ModelReference'
      amount:
        type: number
      transactions:
        type: number
  AmountCountData:
    type: object
    properties:
      amount:
        type: number
      count:
        type: number
  CashierSummary:
    type: object
    properties:
      cancelledItems:
        $ref: '#/definitions/AmountCountData'
      cancelledReceipts:
        $ref: '#/definitions/AmountCountData'
      cashier:
        $ref: '#/definitions/ModelReference'
      receipts:
        $ref: '#/definitions/AmountCountData'
      returns:
        $ref: '#/definitions/AmountCountData'
      voidedReceipts:
        $ref: '#/definitions/AmountCountData'
  CommodityGroupSummary:
    type: object
    properties:
      commodityGroup:
        $ref: '#/definitions/ModelReference'
      discountAmount:
        type: number
      items:
        type: number
      revenue:
        type: number
  CustomerGroupSummary:
    type: object
    properties:
      customerGroup:
        $ref: '#/definitions/ModelReference'
      discountAmount:
        type: number
      items:
        type: number
      revenue:
        type: number
  EndOfDayStatement:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      finishTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      receiptCount:
        type: integer
        format: int64
      successfullyChecked:
        type: boolean
      summaries:
        $ref: '#/definitions/EndOfDayStatementSummary'
      zCount:
        type: integer
        format: int64
  EndOfDayStatementSummary:
    type: object
    properties:
      accounts:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/AccountSummary'
      cashiers:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/CashierSummary'
      commodityGroups:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/CommodityGroupSummary'
      customerGroups:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/CustomerGroupSummary'
      payments:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/PaymentSummary'
      taxes:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/TaxSummary'
  PaymentSummary:
    type: object
    properties:
      actualAmount:
        type: number
      expectedAmount:
        type: number
      paymentMethod:
        $ref: '#/definitions/ModelReference'
  TaxSummary:
    type: object
    properties:
      netAmount:
        type: number
      salesTax:
        $ref: '#/definitions/ModelReference'
      taxAmount:
        type: number
  AccountTransaction:
    type: object
    properties:
      account:
        $ref: '#/definitions/ModelReference'
      amount:
        type: number
      bookingTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      description:
        type: string
      infoTexts:
        type: array
        items:
          type: string
      serialNumbers:
        type: array
        uniqueItems: true
        items:
          type: string
      externalReferences:
        type: object
        additionalProperties:
          type: string
  AdditionalInfo:
    type: object
    properties:
      text:
        type: string
      type:
        $ref: '#/definitions/ModelReference'
  CashierVerificationResult:
    type: object
    properties:
      finishTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      requirement:
        $ref: '#/definitions/ModelReference'
      selectedOption:
        type: string
      failed:
        type: boolean
      dateOfBirth:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
  FiscalTransaction:
    type: object
    properties:
      errorDescription:
        type: string
      failed:
        type: boolean
      finishTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      firstProcessTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      fiscalUnit:
        $ref: '#/definitions/ModelReference'
      number:
        type: integer
        format: int64
      printLink:
        type: string
      printQrCode:
        type: string
      printTexts:
        type: array
        items:
          type: string
      processData:
        type: string
      processType:
        type: string
      signature:
        type: string
        format: byte
      signatureCounter:
        type: integer
        format: int64
      startTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
  GeoLocation:
    type: object
    properties:
      latitude:
        type: number
      longitude:
        type: number
  Payment:
    type: object
    properties:
      amount:
        type: number
      currency:
        $ref: '#/definitions/ModelReference'
      paymentMethod:
        $ref: '#/definitions/ModelReference'
      transactionTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      transactionToken:
        type: string
      externalReferences:
        type: object
        additionalProperties:
          type: string
      paymentTerminalReceipts:
        type: array
        items:
          $ref: '#/definitions/PaymentTerminalReceipt'
  PaymentTerminalReceipt:
    type: object
    properties:
      terminalReceiptPrintLines:
        type: array
        items:
          $ref: '#/definitions/TerminalReceiptPrintLine'
      terminalReceiptType:
        type: string
        enum:
          - OTHER
          - MERCHANT_RECEIPT
          - CARDHOLDER_RECEIPT
  Receipt:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      accountTransactions:
        type: array
        items:
          $ref: '#/definitions/AccountTransaction'
      additionalInfo:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/AdditionalInfo'
      bookingTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      cancelled:
        type: boolean
      cashier:
        description: cashier of the sale. Require [id] when set.
        $ref: '#/definitions/ModelReference'
      creationTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      currency:
        description: 'the currency of the sale. IMPORTANT: property is ignored on import, system default currency is set instead.'
        $ref: '#/definitions/ModelReference'
      reversedReceipt:
        $ref: '#/definitions/ModelReference'
      customer:
        description: customer of the sale. Require [number] and optional [id] when set.
        $ref: '#/definitions/ModelReference'
      customerGroup:
        $ref: '#/definitions/ModelReference'
      depositAmount:
        type: number
      externalReferences:
        type: object
        additionalProperties:
          type: string
      fiscalTransactions:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/FiscalTransaction'
      geoLocation:
        $ref: '#/definitions/GeoLocation'
      infoTexts:
        type: array
        items:
          type: string
      items:
        type: array
        items:
          $ref: '#/definitions/ReceiptItem'
      maxRevisions:
        $ref: '#/definitions/ReceiptMaxRevisions'
      orderNumber:
        type: string
      organizationalUnit:
        description: not set if value is retrieved via pointOfSale path
        readOnly: true
        $ref: '#/definitions/ModelReference'
      payments:
        type: array
        items:
          $ref: '#/definitions/Payment'
      cashierVerificationResults:
        type: array
        items:
          $ref: '#/definitions/CashierVerificationResult'
      pointOfSale:
        description: not set if value is retrieved via pointOfSale path
        readOnly: true
        $ref: '#/definitions/ModelReference'
      priceGroup:
        $ref: '#/definitions/ModelReference'
      revenue:
        readOnly: true
        $ref: '#/definitions/ReceiptRevenue'
      signature:
        $ref: '#/definitions/Signature'
      total:
        readOnly: true
        $ref: '#/definitions/ReceiptTotal'
      voided:
        type: boolean
      voidedItems:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/VoidedReceiptItem'
      voidFiscalTransactions:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/FiscalTransaction'
      voucherTransactions:
        type: array
        items:
          $ref: '#/definitions/VoucherTransaction'
      warehouse:
        readOnly: true
        $ref: '#/definitions/ModelReference'
      zcounter:
        type: integer
        format: int64
  ReceiptItem:
    type: object
    properties:
      attendance:
        $ref: '#/definitions/ModelReference'
      bookingTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      commodityGroup:
        $ref: '#/definitions/ModelReference'
      description:
        type: string
      discounts:
        type: array
        items:
          $ref: '#/definitions/Discount'
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      indent:
        type: integer
        format: int32
      index:
        type: integer
        format: int32
        readOnly: true
      infoTexts:
        type: array
        items:
          type: string
      manualPrice:
        type: boolean
      product:
        description: product of the item. Require [number] and optional [id].
        $ref: '#/definitions/ModelReference'
      quantity:
        type: number
      sector:
        $ref: '#/definitions/ModelReference'
      serialNumbers:
        type: array
        uniqueItems: true
        items:
          type: string
      total:
        $ref: '#/definitions/TotalPrice'
      deliveryDate:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      externalReferences:
        type: object
        additionalProperties:
          type: string
      recognitionNumber:
        type: string
        description: the number referencing the product was typed/scanned to create the receipt item
      type:
        type: string
        enum:
          - PRODUCT
          - VOUCHER
      voucherTransaction:
        $ref: '#/definitions/VoucherTransaction'
      specialPriceConfiguration:
        $ref: '#/definitions/ModelReference'
  ReceiptMaxRevisions:
    type: object
    properties:
      account:
        type: integer
        format: int64
      cashier:
        type: integer
        format: int64
      customer:
        type: integer
        format: int64
      customerGroup:
        type: integer
        format: int64
      organizationalUnit:
        type: integer
        format: int64
      salesTax:
        type: integer
        format: int64
  ReceiptRevenue:
    type: object
    properties:
      gross:
        type: number
      net:
        type: number
  ReceiptTotal:
    type: object
    properties:
      gross:
        type: number
      net:
        type: number
      tax:
        type: number
  TerminalReceiptPrintLine:
    type: object
    properties:
      terminalReceiptPrintLineFont:
        type: string
        enum:
          - NORMAL
          - BOLD
      text:
        type: string
  VoidedReceiptItem:
    type: object
    properties:
      account:
        $ref: '#/definitions/ModelReference'
      indent:
        type: integer
        format: int32
      product:
        $ref: '#/definitions/ModelReference'
      quantity:
        type: number
      total:
        $ref: '#/definitions/TotalPrice'
  VoucherTransaction:
    type: object
    properties:
      amount:
        type: number
      bookingTime:
        type: string
        format: date-time
      cashier:
        $ref: '#/definitions/ModelReference'
      comment:
        type: string
      price:
        type: number
      transactionType:
        type: string
        enum:
          - CREDIT
          - DEBIT
      user:
        $ref: '#/definitions/ModelReference'
      voucher:
        $ref: '#/definitions/ModelReference'
      externalReferences:
        type: object
        additionalProperties:
          type: string
      voided:
        type: boolean
  DeviceConfigurationVariableValue:
    type: object
    properties:
      deviceConfigurationVariable:
        $ref: '#/definitions/ModelReference'
      value:
        type: string
  DeviceInformation:
    type: object
    properties:
      appVersion:
        type: string
        example: '1.0'
        description: current version of paired app
      operatingSystem:
        type: string
        example: iOS 11.1
        description: name and version of the operation system
  FiscalUnitPreConfiguration:
    type: object
    properties:
      apiKey:
        type: string
      apiSecret:
        type: string
      remoteUrl:
        type: string
      adminPin:
        type: string
      adminPuk:
        type: string
      timeAdminPin:
        type: string
  Pos:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      containerMode:
        type: boolean
      contraAccount:
        $ref: '#/definitions/ModelReference'
      coupled:
        type: boolean
        readOnly: true
      coupledClientSystemInformation:
        type: object
        additionalProperties:
          type: string
      couplingId:
        type: string
        description: write only
      customerDisplayConfiguration:
        $ref: '#/definitions/ModelReference'
      defaultCustomerGroup:
        $ref: '#/definitions/ModelReference'
      defaultPaymentMethod:
        $ref: '#/definitions/ModelReference'
      deviceInformation:
        description: only for updating-purposes through PATCH, not shown on GET requests.
        $ref: '#/definitions/DeviceInformation'
      entryGate:
        $ref: '#/definitions/ModelReference'
      external:
        type: boolean
      fiscalServiceType:
        type: string
        enum:
          - DE_TSE_FISKALY
          - DE_TSE_SWISSBIT
          - EFSTA
          - NONE
      fiscalUnit:
        $ref: '#/definitions/ModelReference'
      fiscalUnitPreConfiguration:
        $ref: '#/definitions/FiscalUnitPreConfiguration'
      language:
        $ref: '#/definitions/ModelReference'
      lastReceiptNumber:
        type: string
        description: last receipt number - only shown if external=true and coupled=false; usable for client-side receipt counter.
        readOnly: true
      lastZCount:
        type: integer
        format: int64
        description: last zcount property - only shown if external=true and coupled=false; usable for client-side zcount.
        readOnly: true
      layoutConfiguration:
        $ref: '#/definitions/ModelReference'
      name:
        type: string
      organizationalUnit:
        $ref: '#/definitions/ModelReference'
      posProfile:
        $ref: '#/definitions/ModelReference'
      printFooterLines:
        type: object
        additionalProperties:
          type: string
      printHeaderLines:
        type: object
        additionalProperties:
          type: string
      receiptInfoTexts:
        type: array
        items:
          $ref: '#/definitions/ModelReference'
      receiptNumberPrefix:
        type: string
        readOnly: true
      revenueAccount:
        $ref: '#/definitions/ModelReference'
      tableOverview:
        $ref: '#/definitions/ModelReference'
      tipAccount:
        $ref: '#/definitions/ModelReference'
      useAlternativeSector:
        type: boolean
      warehouse:
        $ref: '#/definitions/ModelReference'
      deviceConfigurationVariableValues:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/DeviceConfigurationVariableValue'
  PosBalance:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      balanceAttempts:
        type: integer
        format: int32
      cashier:
        $ref: '#/definitions/ModelReference'
      createTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      finishTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      summaries:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/PosBalanceSummary'
      summaryChangesets:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/PosBalanceSummaryChangeset'
      items:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/PosBalanceItem'
      total:
        $ref: '#/definitions/PosBalanceTotal'
      transactionReceiptCode:
        type: string
      zCount:
        type: integer
        format: int64
  PosBalanceItem:
    type: object
    properties:
      currencyDenominationType:
        type: string
        enum:
          - BANKNOTE
          - COIN
      total:
        type: number
      nominalValue:
        type: number
      paymentMethod:
        $ref: '#/definitions/ModelReference'
      quantity:
        type: number
  PosBalanceSummary:
    type: object
    properties:
      comment:
        type: string
      paymentMethod:
        $ref: '#/definitions/ModelReference'
      total:
        $ref: '#/definitions/PosBalanceTotal'
  PosBalanceSummaryChangeset:
    type: object
    properties:
      changeTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      newActual:
        type: number
      oldActual:
        type: number
      paymentMethod:
        $ref: '#/definitions/ModelReference'
      user:
        $ref: '#/definitions/ModelReference'
  PosBalanceTotal:
    type: object
    properties:
      actual:
        type: number
      expected:
        type: number
  ResultListPosBalance:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/PosBalance'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  ResultListEndOfDayStatement:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/EndOfDayStatement'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  ResultListReceipt:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/Receipt'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  ResultListPos:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/Pos'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  PriceGroup:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      currency:
        $ref: '#/definitions/ModelReference'
      name:
        type: string
      netPrices:
        type: boolean
  ResultListPriceGroup:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/PriceGroup'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  MediaUrl:
    type: object
    properties:
      url:
        type: string
  Product:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      alternativeSector:
        $ref: '#/definitions/ModelReference'
      assortment:
        $ref: '#/definitions/ModelReference'
      codes:
        type: array
        items:
          $ref: '#/definitions/ProductCode'
      commodityGroup:
        $ref: '#/definitions/ModelReference'
      conversion:
        type: boolean
      costs:
        type: number
      deactivated:
        type: boolean
      deposit:
        type: boolean
      descriptions:
        type: array
        items:
          $ref: '#/definitions/ProductDescription'
      discountable:
        type: boolean
      image:
        $ref: '#/definitions/ModelReference'
      infoTexts:
        type: array
        items:
          $ref: '#/definitions/ModelReference'
      itemSequence:
        $ref: '#/definitions/ModelReference'
      lastPurchasePrice:
        type: number
      listed:
        type: boolean
      listedSince:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      maxPrice:
        type: number
        example: 9999.99
      minPrice:
        type: number
        example: -9999.99
      name:
        type: string
      packagingQuantity:
        type: number
      packagingRequired:
        type: boolean
      packagingUnit:
        type: string
        enum:
          - CUBIC_INCH
          - CUBIC_METER
          - FLUID_OUNCE
          - GALLON_FL
          - GRAM
          - INCH
          - KILOGRAM
          - LITER
          - CENTIMETER
          - METER
          - MILLILITER
          - OUNCE
          - POUND
          - SQUARE_INCH
          - SQUARE_METER
      personalizationRequired:
        type: boolean
      priceChangable:
        type: boolean
      prices:
        type: array
        items:
          $ref: '#/definitions/ProductPrice'
      printTicketsSeparately:
        type: boolean
      productionType:
        $ref: '#/definitions/ModelReference'
      recommendedRetailPrice:
        type: number
      relatedProducts:
        $ref: '#/definitions/ModelReference'
      sector:
        $ref: '#/definitions/ModelReference'
      serialNumberRequired:
        type: boolean
      subproductPresentation:
        type: string
        enum:
          - DEFAULT
          - HIDE_ALL
          - HIDE_PRICES
          - HIDE_QUANTITIES
      subproducts:
        type: array
        items:
          $ref: '#/definitions/ProductSubproduct'
      supplierPrices:
        type: array
        items:
          $ref: '#/definitions/ProductSupplierPrice'
      tags:
        type: array
        items:
          $ref: '#/definitions/ModelReference'
      ticketDefinition:
        $ref: '#/definitions/ModelReference'
      trackInventory:
        type: boolean
      mediaUrls:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/MediaUrl'
      quantityDenomination:
        type: number
      specialPrices:
        type: array
        items:
          $ref: '#/definitions/ProductSpecialPrice'
      verificationRequirements:
        type: array
        items:
          $ref: '#/definitions/ModelReference'
      stockReturnUnsellable:
        type: boolean
  ProductCode:
    type: object
    properties:
      productCode:
        type: string
      containerSize:
        type: number
      description:
        type: string
  ProductDescription:
    type: object
    properties:
      type:
        type: string
        enum:
          - ALLERGENS
          - MANUAL
          - DESCRIPTION
          - ORDER_TEXT
          - RECEIPT_TEXT
          - INGREDIENTS
          - NUTRITIONAL_VALUE
          - CARE_INSTRUCTIONS
          - RECIPE
          - CERTIFICATE
          - WARRANTY_TEXT
          - INFO_URL
          - ADDITIVES
          - LABEL_TEXT
          - MANUFACTURER
      text:
        type: string
      language:
        $ref: '#/definitions/ModelReference'
  ProductPrice:
    type: object
    properties:
      value:
        type: number
        description: the price of the product if [productCode] or [validFrom] matches
      validFrom:
        type: string
        format: date-time
        description: start date the price is valid from. [productCode] or [validFrom] is required, but not both.
      productCode:
        type: string
        description: product code the price is valid for. [productCode] or [validFrom] is required, but not both.
      priceGroup:
        description: price group. [organizationalUnit] or [priceGroup] is required, but not both.
        $ref: '#/definitions/ModelReference'
      organizationalUnit:
        description: organizational unit. [organizationalUnit] or [priceGroup] is required, but not both.
        $ref: '#/definitions/ModelReference'
  ProductSpecialPrice:
    type: object
    properties:
      value:
        type: number
        description: required
      quantityFrom:
        type: number
      specialPriceConfiguration:
        description: required
        $ref: '#/definitions/ModelReference'
  ProductSubproduct:
    type: object
    properties:
      prices:
        type: array
        items:
          $ref: '#/definitions/ProductPrice'
      product:
        $ref: '#/definitions/ModelReference'
      quantity:
        type: number
      tag:
        $ref: '#/definitions/ModelReference'
      type:
        type: string
        enum:
          - PRODUCT
          - TAG
  ProductSupplierPrice:
    type: object
    properties:
      supplier:
        $ref: '#/definitions/ModelReference'
      orderCode:
        type: string
      value:
        type: number
      containerSize:
        type: number
      description:
        type: string
  ResultListProduct:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/Product'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  ProductionType:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      name:
        type: string
      method:
        type: string
        enum:
          - PRINT
          - PRINT_MERGED
          - TICKET_ACTIVATE
          - TICKET_PRINT
          - TICKET_ACTIVATE_PRINT
          - TICKET_VALIDATE_PRINT
          - KORONA_PREPAID
          - KORONA_PREPAID_PRINT
          - EXTERNAL_SYSTEM_CALL
          - VOUCHER_PRINT
          - EXTERNAL_SYSTEM_CALL_WITH_FEEDBACK
      trigger:
        type: string
        enum:
          - AFTER_PAYMENT
          - IMMEDIATELY
          - AFTER_BOOKING
          - BEFORE_PAYMENT
          - MANUAL_ONLY
          - AFTER_PAYMENT_ONLY
      subProducer:
        $ref: '#/definitions/ModelReference'
      externalSystemCall:
        $ref: '#/definitions/ModelReference'
  ResultListProductionType:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/ProductionType'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  DateInterval:
    type: object
    properties:
      from:
        type: string
        format: date-time
        example: '2020-11-22'
        description: 'Format: yyyy-MM-dd'
      to:
        type: string
        format: date-time
        example: '2020-11-25'
        description: 'Format: yyyy-MM-dd'
  Promotion:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      benefit:
        description: required if `type`=COUPON_DISCOUNT|IMMEDIATE_DISCOUNT
        $ref: '#/definitions/PromotionBenefit'
      bonuspoint:
        description: required if `type`=BONUSPOINTS_CUSTOMER|BONUSPOINTS_CASHIER
        $ref: '#/definitions/PromotionBonuspoint'
      coupon:
        description: required if `type`=COUPON_DISCOUNT
        $ref: '#/definitions/PromotionCoupon'
      deactivated:
        type: boolean
      name:
        type: string
      receiptInfoTexts:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/ModelReference'
      stamp:
        description: required if `type`=STAMPS
        $ref: '#/definitions/PromotionStamp'
      triggers:
        type: array
        items:
          $ref: '#/definitions/PromotionTrigger'
      type:
        type: string
        enum:
          - BONUSPOINTS_CASHIER
          - BONUSPOINTS_CUSTOMER
          - COUPON_DISCOUNT
          - IMMEDIATE_DISCOUNT
          - STAMPS
      validity:
        $ref: '#/definitions/PromotionValidity'
  PromotionBenefit:
    type: object
    properties:
      common:
        $ref: '#/definitions/PromotionBenefitCommonDiscount'
      extended:
        $ref: '#/definitions/PromotionBenefitExtendedDiscount'
      layer:
        $ref: '#/definitions/PromotionLayer'
      reduceProductAmount:
        $ref: '#/definitions/PromotionBenefitReduceProductAmount'
      type:
        type: string
        enum:
          - COMMON
          - EXTENDED
          - REDUCE_PRODUCT_AMOUNT
  PromotionBenefitCommonDiscount:
    type: object
    properties:
      applianceTarget:
        type: string
        enum:
          - PRODUCT
          - PRODUCTS_OF_COMMODITY_GROUP
          - PRODUCTS_WITH_TAG
      applianceType:
        type: string
        enum:
          - CHEAPEST_TARGET
          - EACH_TARGET
          - EQUAL_ON_EACH_TARGET
          - MOST_EXPENSIVE_TARGET
          - RECEIPT
      targetCommodityGroup:
        $ref: '#/definitions/ModelReference'
      targetProduct:
        $ref: '#/definitions/ModelReference'
      targetTag:
        $ref: '#/definitions/ModelReference'
      type:
        type: string
        enum:
          - DISCOUNT
          - FIXED_PRICE
      unitType:
        type: string
        enum:
          - FIXED
          - PERCENTAGE
      value:
        type: number
  PromotionBenefitExtendedDiscount:
    type: object
    properties:
      discountCalculations:
        type: array
        items:
          $ref: '#/definitions/PromotionBenefitExtendedDiscountDiscountCalculation'
      positionSelectionCriteria:
        $ref: '#/definitions/PromotionBenefitExtendedDiscountPositionSelectionCriteria'
      positionSelections:
        type: array
        items:
          $ref: '#/definitions/PromotionBenefitExtendedDiscountPositionSelectionExtended'
  PromotionBenefitExtendedDiscountDiscountCalculation:
    type: object
    properties:
      operand:
        type: number
      operator:
        type: string
        enum:
          - EQUALS
          - MINUS
          - PERCENTAGE
      positionSelectionCriteria:
        $ref: '#/definitions/PromotionBenefitExtendedDiscountPositionSelectionCriteria'
      positionSelections:
        type: array
        items:
          $ref: '#/definitions/PromotionBenefitExtendedDiscountPositionSelection'
      reference:
        type: string
        enum:
          - RECEIPT
          - REMAINDER
          - SELECTION
          - SUB_SELECTION
  PromotionBenefitExtendedDiscountPositionSelection:
    type: object
    properties:
      countAmount:
        $ref: '#/definitions/PromotionBenefitExtendedDiscountPositionSelectionCountAmount'
      filter:
        $ref: '#/definitions/PromotionBenefitExtendedDiscountPositionSelectionFilter'
  PromotionBenefitExtendedDiscountPositionSelectionCountAmount:
    type: object
    properties:
      type:
        type: string
        enum:
          - ALL
          - PRICE
          - QUANTIY
      value:
        type: number
  PromotionBenefitExtendedDiscountPositionSelectionCriteria:
    type: object
    properties:
      amountRange:
        $ref: '#/definitions/PromotionBenefitExtendedDiscountPositionSelectionCriteriaMinMaxRange'
      maxIterations:
        type: integer
        format: int32
      priceRange:
        $ref: '#/definitions/PromotionBenefitExtendedDiscountPositionSelectionCriteriaMinMaxRange'
  PromotionBenefitExtendedDiscountPositionSelectionCriteriaMinMaxRange:
    type: object
    properties:
      max:
        $ref: '#/definitions/PromotionBenefitExtendedDiscountPositionSelectionCriteriaMinMaxRangeValueComperator'
      min:
        $ref: '#/definitions/PromotionBenefitExtendedDiscountPositionSelectionCriteriaMinMaxRangeValueComperator'
  PromotionBenefitExtendedDiscountPositionSelectionCriteriaMinMaxRangeValueComperator:
    type: object
    properties:
      inclusive:
        type: boolean
      value:
        type: number
  PromotionBenefitExtendedDiscountPositionSelectionExtended:
    type: object
    properties:
      countAmount:
        $ref: '#/definitions/PromotionBenefitExtendedDiscountPositionSelectionCountAmount'
      filter:
        $ref: '#/definitions/PromotionBenefitExtendedDiscountPositionSelectionFilter'
      discountAmount:
        $ref: '#/definitions/PromotionBenefitExtendedDiscountPositionSelectionCountAmount'
      sort:
        type: string
        enum:
          - IRRELEVANT
          - PRICE_ASCENDING
          - PRICE_DESCENDING
  PromotionBenefitExtendedDiscountPositionSelectionFilter:
    type: object
    properties:
      commodityGroup:
        $ref: '#/definitions/ModelReference'
      couponNumber:
        type: string
      product:
        $ref: '#/definitions/ModelReference'
      sector:
        $ref: '#/definitions/ModelReference'
      tag:
        $ref: '#/definitions/ModelReference'
      type:
        type: string
        enum:
          - COMMODITY_GROUP
          - COUPON_NUMBER
          - NONE
          - PRODUCT
          - SECTOR
          - TAG
  PromotionBenefitReduceProductAmount:
    type: object
    properties:
      product:
        $ref: '#/definitions/ModelReference'
      reductionValue:
        type: number
  PromotionBonuspoint:
    type: object
    properties:
      creation:
        $ref: '#/definitions/PromotionBonuspointCreation'
      redemption:
        $ref: '#/definitions/PromotionBonuspointRedemption'
  PromotionBonuspointCreation:
    type: object
    properties:
      bonuspoints:
        type: integer
        format: int32
      layer:
        $ref: '#/definitions/PromotionLayer'
      partialRevenueForBonuspoints:
        type: number
      type:
        type: string
        enum:
          - FIXED
          - PARTIAL
  PromotionBonuspointRedemption:
    type: object
    properties:
      fixedDiscount:
        $ref: '#/definitions/PromotionBonuspointRedemptionFixedDiscount'
      percentageDiscount:
        $ref: '#/definitions/PromotionBonuspointRedemptionPercentageDiscount'
      tagDiscount:
        $ref: '#/definitions/PromotionBonuspointRedemptionTagDiscount'
      type:
        type: string
        enum:
          - FIXED_DISCOUNT
          - PERCENTAGE_DISCOUNT
          - TAG_DISCOUNT
  PromotionBonuspointRedemptionFixedDiscount:
    type: object
    properties:
      bonuspoints:
        type: integer
        format: int32
      discountValue:
        type: number
  PromotionBonuspointRedemptionPercentageDiscount:
    type: object
    properties:
      bonuspoints:
        type: integer
        format: int32
      discountValue:
        type: number
  PromotionBonuspointRedemptionTagDiscount:
    type: object
    properties:
      bonuspoints:
        type: integer
        format: int32
      tag:
        $ref: '#/definitions/ModelReference'
  PromotionCoupon:
    type: object
    properties:
      codeType:
        type: string
        enum:
          - BARCODE
          - CODEWORD
          - QR_CODE
      organizationalUnits:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/ModelReference'
      text:
        type: string
      validity:
        $ref: '#/definitions/PromotionCouponValidity'
  PromotionCouponValidity:
    type: object
    properties:
      dateInterval:
        description: required if `type`=DATE_INTERVAL
        $ref: '#/definitions/DateInterval'
      daysAfterPurchaseInterval:
        description: required if `type`=DAYS_AFTER_PURCHASE_INTERVAL
        $ref: '#/definitions/PromotionCouponValidityDaysAfterPurchaseInterval'
      type:
        type: string
        enum:
          - DATE_INTERVAL
          - DAYS_AFTER_PURCHASE_INTERVAL
  PromotionCouponValidityDaysAfterPurchaseInterval:
    type: object
    properties:
      from:
        type: integer
        format: int32
      to:
        type: integer
        format: int32
  PromotionLayer:
    type: object
    properties:
      exclusive:
        type: boolean
      layer:
        $ref: '#/definitions/ModelReference'
  PromotionStamp:
    type: object
    properties:
      layer:
        $ref: '#/definitions/PromotionLayer'
      stampAmount:
        type: integer
        format: int32
      stampConfiguration:
        type: string
        enum:
          - FIVE_PLUS_ONE
          - TEN_PLUS_ONE
  PromotionTrigger:
    type: object
    properties:
      customerGroups:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/ModelReference'
      customers:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/ModelReference'
      externalCouponNumber:
        type: string
        description: ignored if `type`=STAMPS
      productAmount:
        description: ignored if promotion `type`=STAMPS
        $ref: '#/definitions/PromotionTriggerProductAmountCondition'
      receiptProductAmount:
        description: ignored if promotion `type`=STAMPS
        $ref: '#/definitions/PromotionTriggerReceiptProductAmountCondition'
      receiptRevenue:
        description: ignored if promotion `type`=STAMPS
        $ref: '#/definitions/PromotionTriggerReceiptRevenueCondition'
      tagAmount:
        $ref: '#/definitions/PromotionTriggerTagAmountCondition'
      tagRevenue:
        description: ignored if promotion `type`=STAMPS
        $ref: '#/definitions/PromotionTriggerTagRevenueCondition'
  PromotionTriggerProductAmountCondition:
    type: object
    properties:
      equalityCondition:
        type: string
        enum:
          - EQUAL
          - GREATER_OR_EQUAL
      product:
        $ref: '#/definitions/ModelReference'
      value:
        type: number
  PromotionTriggerReceiptProductAmountCondition:
    type: object
    properties:
      equalityCondition:
        type: string
        enum:
          - GREATER_OR_EQUAL
      value:
        type: number
  PromotionTriggerReceiptRevenueCondition:
    type: object
    properties:
      equalityCondition:
        type: string
        enum:
          - EQUAL
          - GREATER_OR_EQUAL
      value:
        type: number
  PromotionTriggerTagAmountCondition:
    type: object
    properties:
      equalityCondition:
        type: string
        enum:
          - EQUAL
          - GREATER_OR_EQUAL
      tag:
        $ref: '#/definitions/ModelReference'
      value:
        type: number
  PromotionTriggerTagRevenueCondition:
    type: object
    properties:
      equalityCondition:
        type: string
        enum:
          - EQUAL
          - GREATER_OR_EQUAL
      tag:
        $ref: '#/definitions/ModelReference'
      value:
        type: number
  PromotionValidity:
    type: object
    properties:
      dateInterval:
        $ref: '#/definitions/DateInterval'
      daysOfMonth:
        type: array
        uniqueItems: true
        items:
          type: integer
          format: int32
      daysOfWeek:
        type: array
        uniqueItems: true
        items:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
      organizationalUnits:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/ModelReference'
      timeOfDayInterval:
        $ref: '#/definitions/TimeOfDayInterval'
  TimeOfDayInterval:
    type: object
    properties:
      from:
        type: string
        example: '00:08:00'
        description: 'Pattern: ^[0-2][0-9](\:[0-5][0-9]){2,2}$'
      to:
        type: string
        example: '00:17:00'
        description: 'Pattern: ^[0-2][0-9](\:[0-5][0-9]){2,2}$'
  ResultListPromotion:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/Promotion'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  ReceiptLayoutConfiguration:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      name:
        type: string
      showProductNumbers:
        type: boolean
      showReceiptNumberBarcode:
        type: boolean
      footerLogoNumber:
        type: integer
        format: int32
      headerLogoNumber:
        type: integer
        format: int32
      showRecommendedRetailPriceThreshold:
        type: integer
        format: int32
      itemGrouping:
        type: string
        enum:
          - ASSORTMENT
          - COMMODITY_GROUP
          - NONE
      showReducedReceiptInformation:
        type: boolean
      showReducedCustomerInformation:
        type: boolean
      showRemovedItems:
        type: boolean
      showTotalDiscount:
        type: boolean
      showPricesOnDeliveryNotes:
        type: boolean
      showTaxName:
        type: boolean
      depositSummary:
        type: boolean
      showOptionalFiscalData:
        type: boolean
      showArticleCount:
        type: boolean
  ResultListReceiptLayoutConfiguration:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/ReceiptLayoutConfiguration'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  SalesTax:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      dsfinvkTaxKey:
        type: string
        enum:
          - AVERAGE
          - AVERAGE_OTHER_CASES
          - FULL
          - NON_TAXABLE
          - REDUCED
          - TAX_FREE
          - UNKNOWN
      economicZone:
        $ref: '#/definitions/ModelReference'
      included:
        type: boolean
      name:
        type: string
      rates:
        type: array
        items:
          $ref: '#/definitions/SalesTaxRate'
  SalesTaxRate:
    type: object
    properties:
      rate:
        type: number
      validFrom:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
  ResultListSalesTax:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/SalesTax'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  Sector:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      name:
        type: string
      salesTaxes:
        type: array
        items:
          $ref: '#/definitions/SectorSalesTaxItem'
      revenueAccounts:
        type: array
        items:
          $ref: '#/definitions/SectorRevenueAccountItem'
  SectorRevenueAccountItem:
    type: object
    properties:
      revenueAccount:
        $ref: '#/definitions/ModelReference'
      economicZone:
        $ref: '#/definitions/ModelReference'
  SectorSalesTaxItem:
    type: object
    properties:
      index:
        type: integer
        format: int32
      salesTax:
        $ref: '#/definitions/ModelReference'
  ResultListSector:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/Sector'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  SpecialPriceConfiguration:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      name:
        type: string
      validFrom:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'required; Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      validTo:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'required; Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      organizationalUnits:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/ModelReference'
  SpecialPrice:
    type: object
    properties:
      value:
        type: number
        description: required
      quantityFrom:
        type: number
      product:
        description: required
        $ref: '#/definitions/ModelReference'
  ResultListSpecialPriceConfiguration:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/SpecialPriceConfiguration'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  Period:
    type: object
    properties:
      start:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      end:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      results:
        type: object
  PeriodMapStringRevenueData:
    type: object
    properties:
      start:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      end:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      results:
        type: object
        additionalProperties:
          $ref: '#/definitions/RevenueData'
  PeriodObject:
    type: object
    properties:
      start:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      end:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      results:
        type: object
  RevenueData:
    type: object
    properties:
      netValue:
        type: number
      grossValue:
        type: number
      averageNetValue:
        type: number
      averageGrossValue:
        type: number
      customersTotal:
        type: integer
        format: int64
  Statistic:
    type: object
    properties:
      organizationalUnit:
        $ref: '#/definitions/ModelReference'
      currentPeriod:
        $ref: '#/definitions/PeriodObject'
      previousPeriod:
        $ref: '#/definitions/PeriodObject'
  StatisticMapStringRevenueData:
    type: object
    properties:
      organizationalUnit:
        $ref: '#/definitions/ModelReference'
      currentPeriod:
        $ref: '#/definitions/PeriodMapStringRevenueData'
      previousPeriod:
        $ref: '#/definitions/PeriodMapStringRevenueData'
  PeriodListTopSeller:
    type: object
    properties:
      start:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      end:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      results:
        type: array
        items:
          $ref: '#/definitions/TopSeller'
  StatisticListTopSeller:
    type: object
    properties:
      organizationalUnit:
        $ref: '#/definitions/ModelReference'
      currentPeriod:
        $ref: '#/definitions/PeriodListTopSeller'
      previousPeriod:
        $ref: '#/definitions/PeriodListTopSeller'
  TopSeller:
    type: object
    properties:
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx). recommanded to use for linking purposes. will never change.
      name:
        type: string
        description: name, like it is set in backoffice
      number:
        type: string
        description: number, like it is set in backoffice
      grossAmount:
        type: number
      quantity:
        type: number
  PeriodRevenueData:
    type: object
    properties:
      start:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      end:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      results:
        $ref: '#/definitions/RevenueData'
  StatisticRevenueData:
    type: object
    properties:
      organizationalUnit:
        $ref: '#/definitions/ModelReference'
      currentPeriod:
        $ref: '#/definitions/PeriodRevenueData'
      previousPeriod:
        $ref: '#/definitions/PeriodRevenueData'
  StockAdjustmentItem:
    type: object
    properties:
      amount:
        type: number
      product:
        $ref: '#/definitions/ModelReference'
      reason:
        $ref: '#/definitions/StockAdjustmentItemReason'
      revision:
        type: integer
        format: int64
        readOnly: true
  StockAdjustmentItemReason:
    type: object
    properties:
      comment:
        type: string
      type:
        type: string
        enum:
          - BREAKAGE
          - EXPIRED_SHELF_LIFE
          - OTHER
          - THEFT
  StockAdjustment:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      bookingApiUser:
        readOnly: true
        $ref: '#/definitions/ModelReference'
      bookingTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
        readOnly: true
      bookingUser:
        readOnly: true
        $ref: '#/definitions/ModelReference'
      externalId:
        type: string
      finishTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
        readOnly: true
      production:
        type: boolean
      reason:
        type: string
      receiptNumber:
        type: string
      warehouse:
        $ref: '#/definitions/ModelReference'
      status:
        type: string
        readOnly: true
        enum:
          - BOOKED
          - IN_PROGRESS
  ResultListStockAdjustmentItem:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/StockAdjustmentItem'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  ResultListStockAdjustment:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/StockAdjustment'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  ResultListStockOrderItem:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/StockOrderItem'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  StockOrderItem:
    type: object
    properties:
      name:
        type: string
      productCode:
        type: string
      supplierItemNumber:
        type: string
      productNumber:
        type: string
      size:
        type: string
      quantity:
        type: number
      containerSize:
        type: number
      itemPrice:
        type: number
      product:
        $ref: '#/definitions/ModelReference'
      deliveryDate:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      receivedQuantity:
        type: number
      revision:
        type: integer
        format: int64
  ResultListStockOrder:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/StockOrder'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  StockOrder:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      bookingApiUser:
        $ref: '#/definitions/ModelReference'
      bookingTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      bookingUser:
        $ref: '#/definitions/ModelReference'
      cashier:
        $ref: '#/definitions/ModelReference'
      comment:
        type: string
      createTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      createUser:
        $ref: '#/definitions/ModelReference'
      customer:
        $ref: '#/definitions/ModelReference'
      deposit:
        type: number
      description:
        type: string
      expectedFromDate:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      expectedToDate:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      finalized:
        type: boolean
        readOnly: true
      items:
        type: array
        items:
          $ref: '#/definitions/StockOrderItem'
      itemsCount:
        type: integer
        format: int32
      organizationalUnit:
        $ref: '#/definitions/ModelReference'
      partyInformation:
        $ref: '#/definitions/ProductTransferInvolvedPartyInformation'
      pickupDate:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      pointOfSale:
        $ref: '#/definitions/ModelReference'
      shippingCondition:
        type: string
      shippingSupplierInformation:
        type: string
      sourceOrganizationalUnit:
        $ref: '#/definitions/ModelReference'
      specialOfferCode:
        type: string
      storeOrder:
        $ref: '#/definitions/ModelReference'
      supplier:
        $ref: '#/definitions/ModelReference'
      status:
        type: string
        readOnly: true
        enum:
          - BOOKED
          - IN_PROGRESS
  StockReceiptItem:
    type: object
    properties:
      amount:
        $ref: '#/definitions/StockReceiptItemAmount'
      identification:
        $ref: '#/definitions/StockReceiptItemIdentification'
      index:
        type: integer
        format: int32
        readOnly: true
      product:
        $ref: '#/definitions/ModelReference'
      purchasePrice:
        $ref: '#/definitions/StockReceiptItemPurchasePrice'
      revision:
        type: integer
        format: int64
        readOnly: true
      shelfLife:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
  StockReceiptItemAmount:
    type: object
    properties:
      expected:
        type: number
      received:
        type: number
  StockReceiptItemIdentification:
    type: object
    properties:
      buyer:
        type: string
      productCode:
        type: string
      supplier:
        type: string
  StockReceiptItemPurchasePrice:
    type: object
    properties:
      actual:
        type: number
      old:
        type: number
  ResultListStockReceiptItem:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/StockReceiptItem'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  StoreOrderItem:
    type: object
    properties:
      product:
        $ref: '#/definitions/ModelReference'
      quantity:
        type: number
      supplier:
        $ref: '#/definitions/ModelReference'
      sourceOrganizationalUnit:
        $ref: '#/definitions/ModelReference'
  StoreOrder:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      createTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      processTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      finishTime:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      pointOfSale:
        $ref: '#/definitions/ModelReference'
      targetOrganizationalUnit:
        $ref: '#/definitions/ModelReference'
      comment:
        type: string
      itemsCount:
        type: integer
        format: int32
      customerOrder:
        $ref: '#/definitions/ModelReference'
      pickupDate:
        type: string
        format: date-time
  ResultListStoreOrderItem:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/StoreOrderItem'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  ResultListStoreOrder:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/StoreOrder'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  Supplier:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      additionalInformation:
        type: string
      address:
        $ref: '#/definitions/ProductTransferInvolvedPartyInformationData'
      contact:
        $ref: '#/definitions/SupplierContact'
      contactPerson:
        $ref: '#/definitions/SupplierContactPerson'
      customerNumber:
        type: string
      name:
        type: string
      payment:
        $ref: '#/definitions/SupplierPaymentInformation'
      returnAddress:
        $ref: '#/definitions/ProductTransferInvolvedPartyInformationData'
      deliveryConditions:
        type: string
  SupplierContact:
    type: object
    properties:
      email:
        type: string
      fax:
        type: string
      phone:
        type: string
      website:
        type: string
  SupplierContactPerson:
    type: object
    properties:
      email:
        type: string
      fax:
        type: string
      firstname:
        type: string
      mobile:
        type: string
      phone:
        type: string
      salutation:
        type: string
      surname:
        type: string
  SupplierPaymentInformation:
    type: object
    properties:
      accountNumber:
        type: string
      bank:
        type: string
      bankNumber:
        type: string
      bic:
        type: string
      creditorIdentifier:
        type: string
      currency:
        $ref: '#/definitions/ModelReference'
      iban:
        type: string
      paymentMethod:
        type: string
        enum:
          - INVOICE
          - PREPAYMENT
          - CASH_ON_DELIVERY
          - DIRECT_DEBIT
      minimumOrderValue:
        type: number
  ResultListSupplier:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/Supplier'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  Tag:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      name:
        type: string
  ResultListTag:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/Tag'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  Admission:
    type: object
    properties:
      daily:
        type: integer
        format: int32
      total:
        type: integer
        format: int32
  Interval:
    type: object
    properties:
      from:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      to:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
  TicketDefinition:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      activationDelayAfterPurchase:
        $ref: '#/definitions/TimePeriod'
      countStatistically:
        type: boolean
      entryGates:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/ModelReference'
      entrySignal:
        type: string
      name:
        type: string
      possibleAdmissions:
        $ref: '#/definitions/Admission'
      reEntryLock:
        type: integer
        format: int64
      tag:
        $ref: '#/definitions/ModelReference'
      validityPeriodAfterActivation:
        $ref: '#/definitions/TimePeriod'
      validityPeriodAfterEntrance:
        $ref: '#/definitions/TimePeriod'
      validityPeriodDaily:
        $ref: '#/definitions/Interval'
      validityPeriodTotal:
        $ref: '#/definitions/Interval'
  ResultListTicketDefinition:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/TicketDefinition'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  ResultListTicket:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/Ticket'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  Ticket:
    type: object
    properties:
      entryId:
        type: integer
        format: int64
      personalization:
        $ref: '#/definitions/TicketPersonalization'
      ticketNumber:
        type: string
      duplicate:
        type: boolean
      creationDate:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      locked:
        type: boolean
      lockedTo:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
  TimeTrackingEntity:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      name:
        type: string
      paidTime:
        type: boolean
  ResultListTimeTrackingEntity:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/TimeTrackingEntity'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  ResultListTimeTrackingEntry:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/TimeTrackingEntry'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
  TimeTrackingEntry:
    type: object
    properties:
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      timeStamp:
        type: string
        format: date-time
        example: '2018-11-22T09:40:21+01:00'
        description: 'Format: yyyy-MM-dd''T''HH:mm:ssXXX'
      cashier:
        $ref: '#/definitions/ModelReference'
      organizationalUnit:
        $ref: '#/definitions/ModelReference'
      timeTrackingEntity:
        $ref: '#/definitions/ModelReference'
  UserRole:
    type: object
    properties:
      active:
        type: boolean
        description: indicates whether the object is active for use or not
        readOnly: true
      id:
        type: string
        description: global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      number:
        type: string
        description: number of the object, like it is set in backoffice; will be removed when active=false
      revision:
        type: integer
        format: int64
        description: the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
        readOnly: true
      name:
        type: string
      permissions:
        type: array
        uniqueItems: true
        items:
          type: string
          enum:
            - EXPORT
            - MANAGE_CONTRACT
            - MANAGE_FRANCHISE_RELATIONSHIP
            - CREATE_ACCOUNT
            - DELETE_ACCOUNT
            - EDIT_ACCOUNT
            - LIST_ACCOUNT
            - CREATE_ADDITIONALRECEIPTINFOTYPE
            - DELETE_ADDITIONALRECEIPTINFOTYPE
            - EDIT_ADDITIONALRECEIPTINFOTYPE
            - LIST_ADDITIONALRECEIPTINFOTYPE
            - CREATE_PRODUCT
            - EDIT_PRODUCT
            - EDIT_PRODUCTNUMBER
            - DELETE_PRODUCT
            - LIST_PRODUCT
            - EDIT_PRODUCT_LISTED
            - LIST_PRODUCT_PURCHASE_PRICES
            - EDIT_STORE_PRICES
            - CREATE_ASSORTMENT
            - DELETE_ASSORTMENT
            - EDIT_ASSORTMENT
            - LIST_ASSORTMENT
            - CREATE_CASHIER
            - DELETE_CASHIER
            - EDIT_CASHIER
            - LIST_CASHIER
            - CREATE_COMMODITYGROUP
            - DELETE_COMMODITYGROUP
            - EDIT_COMMODITYGROUP
            - LIST_COMMODITYGROUP
            - CREATE_COUPONINGACTION
            - DELETE_COUPONINGACTION
            - EDIT_COUPONINGACTION
            - LIST_COUPONINGACTION
            - CREATE_CURRENCY
            - DELETE_CURRENCY
            - EDIT_CURRENCY
            - LIST_CURRENCY
            - CREATE_CUSTOMERGROUP
            - DELETE_CUSTOMERGROUP
            - EDIT_CUSTOMERGROUP
            - LIST_CUSTOMERGROUP
            - CREATE_DATAEXCHANGEENTRY
            - DELETE_DATAEXCHANGEENTRY
            - EDIT_DATAEXCHANGEENTRY
            - LIST_DATAEXCHANGEENTRY
            - SHOW_API_DATAEXCHANGEENTRIES
            - CREATE_INFOTEXT
            - DELETE_INFOTEXT
            - EDIT_INFOTEXT
            - LIST_INFOTEXT
            - CREATE_INVENTORY
            - DELETE_INVENTORY
            - EDIT_INVENTORY
            - LIST_INVENTORY
            - CREATE_ITEMSEQUENCE
            - DELETE_ITEMSEQUENCE
            - EDIT_ITEMSEQUENCE
            - LIST_ITEMSEQUENCE
            - CREATE_LANGUAGE
            - DELETE_LANGUAGE
            - EDIT_LANGUAGE
            - LIST_LANGUAGE
            - EDIT_NUMBERRANGES
            - CREATE_PRICEGROUP
            - DELETE_PRICEGROUP
            - EDIT_PRICEGROUP
            - LIST_PRICEGROUP
            - CREATE_PRICERULE
            - DELETE_PRICERULE
            - EDIT_PRICERULE
            - LIST_PRICERULE
            - CREATE_SECTOR
            - DELETE_SECTOR
            - EDIT_SECTOR
            - LIST_SECTOR
            - CREATE_PRODUCER
            - DELETE_PRODUCER
            - EDIT_PRODUCER
            - LIST_PRODUCER
            - CREATE_ENTRYGATE
            - DELETE_ENTRYGATE
            - EDIT_ENTRYGATE
            - LIST_ENTRYGATE
            - CREATE_EVENT
            - DELETE_EVENT
            - EDIT_EVENT
            - LIST_EVENT
            - CREATE_TICKETDESCRIPTION
            - DELETE_TICKETDESCRIPTION
            - EDIT_TICKETDESCRIPTION
            - LIST_TICKETDESCRIPTION
            - CREATE_EXTERNAL_TICKET_CONFIGURATION
            - DELETE_EXTERNAL_TICKET_CONFIGURATION
            - EDIT_EXTERNAL_TICKET_CONFIGURATION
            - LIST_EXTERNAL_TICKET_CONFIGURATION
            - CREATE_REVENUEDESTINATION
            - DELETE_REVENUEDESTINATION
            - LIST_REVENUEDESTINATION
            - EDIT_REVENUEDESTINATION
            - CREATE_POS
            - DELETE_POS
            - EDIT_POS
            - LIST_POS
            - CREATE_EXTERNAL_SYSTEM_CALL
            - DELETE_EXTERNAL_SYSTEM_CALL
            - EDIT_EXTERNAL_SYSTEM_CALL
            - LIST_EXTERNAL_SYSTEM_CALL
            - CREATE_POSPROFILE
            - DELETE_POSPROFILE
            - EDIT_POSPROFILE
            - LIST_POSPROFILE
            - CREATE_BUTTONLAYOUT
            - DELETE_BUTTONLAYOUT
            - EDIT_BUTTONLAYOUT
            - LIST_BUTTONLAYOUT
            - CREATE_POSPAGELAYOUTCONFIGURATION
            - DELETE_POSPAGELAYOUTCONFIGURATION
            - EDIT_POSPAGELAYOUTCONFIGURATION
            - LIST_POSPAGELAYOUTCONFIGURATION
            - CREATE_ORG
            - DELETE_ORG
            - EDIT_ORG
            - LIST_ORG
            - CREATE_PAYMENTMETHOD
            - DELETE_PAYMENTMETHOD
            - EDIT_PAYMENTMETHOD
            - LIST_PAYMENTMETHOD
            - CREATE_USER
            - DELETE_USER
            - EDIT_USER
            - LIST_USER
            - CREATE_USERROLE
            - DELETE_USERROLE
            - EDIT_USERROLE
            - LIST_USERROLE
            - CREATE_CASHIERROLE
            - DELETE_CASHIERROLE
            - EDIT_CASHIERROLE
            - LIST_CASHIERROLE
            - CREATE_SALESTAX
            - DELETE_SALESTAX
            - EDIT_SALESTAX
            - LIST_SALESTAX
            - CREATE_ECONOMICZONE
            - DELETE_ECONOMICZONE
            - EDIT_ECONOMICZONE
            - LIST_ECONOMICZONE
            - CREATE_TABLEOVERVIEW
            - DELETE_TABLEOVERVIEW
            - LIST_TABLEOVERVIEW
            - EDIT_TABLEOVERVIEW
            - CREATE_VOUCHERCONFIGURATION
            - DELETE_VOUCHERCONFIGURATION
            - LIST_VOUCHERCONFIGURATION
            - EDIT_VOUCHERCONFIGURATION
            - CREATE_VOUCHERTRANSACTION
            - DELETE_VOUCHERTRANSACTION
            - LIST_VOUCHERTRANSACTION
            - EDIT_VOUCHERTRANSACTION
            - CREATE_TAG
            - DELETE_TAG
            - EDIT_TAG
            - LIST_TAG
            - CREATE_REVENUEACCOUNT
            - DELETE_REVENUEACCOUNT
            - EDIT_REVENUEACCOUNT
            - LIST_REVENUEACCOUNT
            - CREATE_COSTCENTER
            - DELETE_COSTCENTER
            - EDIT_COSTCENTER
            - LIST_COSTCENTER
            - CREATE_CONTRAACCOUNT
            - DELETE_CONTRAACCOUNT
            - EDIT_CONTRAACCOUNT
            - LIST_CONTRAACCOUNT
            - MANAGE_INVENTORY
            - VIEW_INVENTORY
            - BALANCE_EVALUATION
            - RECEIPT_LIST
            - BALANCE_LIST
            - EDIT_POS_BALANCE
            - CORRECT_PURCHASE_PRICE
            - CREATE_CUSTOMER
            - DELETE_CUSTOMER
            - EDIT_CUSTOMER
            - LIST_CUSTOMER
            - CREATE_SUPPLIER
            - DELETE_SUPPLIER
            - EDIT_SUPPLIER
            - LIST_SUPPLIER
            - MANAGE_SENDREPORTTASK
            - CREATE_STOCKADJUSTMENT
            - DELETE_STOCKADJUSTMENT
            - EDIT_STOCKADJUSTMENT
            - LIST_STOCKADJUSTMENT
            - CREATE_STOCK_RETURN
            - DELETE_STOCK_RETURN
            - EDIT_STOCK_RETURN
            - LIST_STOCK_RETURN
            - CREATE_STOCKORDER
            - DELETE_STOCKORDER
            - EDIT_STOCKORDER
            - LIST_STOCKORDER
            - CREATE_STOCKORDERTEMPLATE
            - DELETE_STOCKORDERTEMPLATE
            - EDIT_STOCKORDERTEMPLATE
            - LIST_STOCKORDERTEMPLATE
            - CREATE_STOREORDER
            - DELETE_STOREORDER
            - EDIT_STOREORDER
            - LIST_STOREORDER
            - CREATE_STOREORDERTEMPLATE
            - DELETE_STOREORDERTEMPLATE
            - EDIT_STOREORDERTEMPLATE
            - LIST_STOREORDERTEMPLATE
            - CREATE_STOREORDERCOLLECTION
            - DELETE_STOREORDERCOLLECTION
            - EDIT_STOREORDERCOLLECTION
            - LIST_STOREORDERCOLLECTION
            - CREATE_DISPATCHNOTIFICATION
            - DELETE_DISPATCHNOTIFICATION
            - EDIT_DISPATCHNOTIFICATION
            - LIST_DISPATCHNOTIFICATION
            - CREATE_STOCKRECEIPT
            - DELETE_STOCKRECEIPT
            - EDIT_STOCKRECEIPT
            - LIST_STOCKRECEIPT
            - CREATE_TIMETRACKINGENTITY
            - DELETE_TIMETRACKINGENTITY
            - EDIT_TIMETRACKINGENTITY
            - LIST_TIMETRACKINGENTITY
            - CREATE_RECEIPTLAYOUTCONFIGURATION
            - DELETE_RECEIPTLAYOUTCONFIGURATION
            - EDIT_RECEIPTLAYOUTCONFIGURATION
            - LIST_RECEIPTLAYOUTCONFIGURATION
            - CREATE_ORDERCYCLE
            - DELETE_ORDERCYCLE
            - EDIT_ORDERCYCLE
            - LIST_ORDERCYCLE
            - CREATE_PREPAIDCARD
            - DELETE_PREPAIDCARD
            - EDIT_PREPAIDCARD
            - LIST_PREPAIDCARD
            - CREATE_CAMPAIGNCARD
            - DELETE_CAMPAIGNCARD
            - EDIT_CAMPAIGNCARD
            - LIST_CAMPAIGNCARD
            - CREATE_CUSTOMER_DISPLAY_CONFIGURATION
            - DELETE_CUSTOMER_DISPLAY_CONFIGURATION
            - EDIT_CUSTOMER_DISPLAY_CONFIGURATION
            - LIST_CUSTOMER_DISPLAY_CONFIGURATION
            - DASHBOARD_REVENUE_EVALUATIONS
            - ORGANIZATIONAL_UNIT_TREND_REPORT
            - COMMODITYGROUP_STATISTIC
            - HOURREVENUE_STATISTIC
            - DAYREVENUE_STATISTIC
            - HOURRECEIPTAMOUNT_STATISTIC
            - DAYOFWEEKCUSTOMER_STATISTIC
            - HOURCUSTOMER_STATISTIC
            - POS_STATISTIC
            - CASHIER_STATISTIC
            - PAYMENT_METHOD_STATISTIC
            - TOPSELLER_STATISTIC
            - MOSTPOPULAR_STATISTIC
            - PRODUCT_PERFORMANCE_STATISTIC
            - WAREHOUSE_STATISTIC
            - WAREHOUSE_REPORT
            - CUSTOMERGROUP_STATISTIC
            - CUSTOMER_STATISTIC
            - STOCK_HISTORY_STATISTIC
            - STOCK_RETURN_RATE
            - STOCK_RETURN_REPORT
            - ADDITIONAL_RECEIPT_INFO_REPORT
            - PRODUCT_REPORT
            - BONJOURNAL_REPORT
            - POSTING_JOURNAL_REPORT
            - DETACHEDPRODUCT_REPORT
            - CASHIER_REPORT
            - CASHIER_REVENUE_REPORT
            - SELLER_REVENUE_REPORT
            - CASHIERBALANCEDEVIATION_REPORT
            - POS_REPORT
            - ORGANIZATIONALUNIT_REPORT
            - TAG_REPORT
            - CASHIER_COMISSION_REPORT
            - ORG_COMISSION_REPORT
            - TAX_REPORT
            - SECTOR_REPORT
            - SERIAL_NUMBER_REPORT
            - STOCKVALUE_REPORT
            - TIMETRACKING_REPORT
            - PRODUCT_CUSTOMER_REPORT
            - SLOW_SELLER_REPORT
            - TOP_SELLER_REPORT
            - DISCOUNT_REASONS_REPORT
            - DISCOUNT_REPORT
            - COMMODITYGROUP_REPORT
            - ACCOUNT_TRANSACTIONS
            - CUSTOMERGROUP_REPORT
            - PAYMENT_METHOD_REPORT
            - REVENUE_DESTINATION_REPORT
            - CUSTOMER_ABC_REPORT
            - CUSTOMER_SALES
            - CUSTOMER_PRODUCT_REPORT
            - PREPAID_CARDS_REPORT
            - PREPAID_TRANSACTIONS_REPORT
            - SUPPLIER_PRODUCTS_REPORT
            - PRODUCTS_PER_WEEKDAY_REPORT
            - KEY_PERFORMANCE_REPORT
            - MANAGEMENT_REPORT
            - MOVEMENT_REPORT
            - ABCANALYSIS_REPORT
            - SUPPLIER_ANALYSIS_REPORT
            - SLOW_SELLER_RATIO_REPORT
            - TOP_SELLER_RATIO_REPORT
            - ORGANIZATIONALUNIT_TWOPOINTZERO_REPORT
            - ORGANIZATIONALUNIT_COMPARISON_REPORT
            - HIERARCHICALCOMMODITYGROUP_REPORT
            - SUPPLIER_STOCKRECEIPT_REPORT
            - INTERNAL_TRANSFER_REPORT
            - SUPPLIER_SALES_REPORT
            - SHELF_LIFE_SIMPLE_REPORT
            - COMPARISON_REPORT
            - SALES_PRICE_REPORT
            - PRODUCTION_REPORT
            - CAMPAIGN_CARD_REPORT
            - POSBALANCESUMMARY_REPORT
            - DELIVERYNOTESUMMARY_REPORT
            - DIFFERENCE_CHECK_REPORT
            - STOCK_RECEIPT_DISCREPANCY_REPORT
            - DAYRATING_REPORT
            - VOID_REPORT
            - CREDIT_CARD_CONSOLIDATION_REPORT
            - PAYMENT_REPORT
            - SERVICE_PROVISION_REVENUE_REPORT
            - SERVICE_PROVISION_DISTINCTION_REPORT
            - VOUCHER_REPORT
            - CREATE_IMAGE
            - DELETE_IMAGE
            - LIST_IMAGE
            - CREATE_REPORT_FILE
            - EDIT_REPORT_FILE
            - DELETE_REPORT_FILE
            - LIST_REPORT_FILE
            - MANAGE_STATIONERY
            - CREATE_QUOTE
            - DELETE_QUOTE
            - EDIT_QUOTE
            - LIST_QUOTE
            - CREATE_RENTAL
            - DELETE_RENTAL
            - EDIT_RENTAL
            - LIST_RENTAL
            - CREATE_INVOICE
            - DELETE_INVOICE
            - EDIT_INVOICE
            - LIST_INVOICE
            - CREATE_DELIVERY_NOTE
            - DELETE_DELIVERY_NOTE
            - EDIT_DELIVERY_NOTE
            - LIST_DELIVERY_NOTE
            - CREATE_CUSTOMER_ORDER
            - DELETE_CUSTOMER_ORDER
            - EDIT_CUSTOMER_ORDER
            - LIST_CUSTOMER_ORDER
            - CREATE_CUSTOMER_ORDER_TEMPLATE
            - DELETE_CUSTOMER_ORDER_TEMPLATE
            - EDIT_CUSTOMER_ORDER_TEMPLATE
            - LIST_CUSTOMER_ORDER_TEMPLATE
            - CREATE_CASH_JOURNAL
            - DELETE_CASH_JOURNAL
            - EDIT_CASH_JOURNAL
            - LIST_CASH_JOURNAL
            - INSTANT_ORDER_PORTAL
            - INSTANT_ORDER
            - ENTRY_REPORT
            - LIST_TICKETS
            - EDIT_TICKETS
            - CREATE_MESSAGE
            - DELETE_MESSAGE
            - EDIT_MESSAGE
            - LIST_MESSAGE
            - LIST_WAREHOUSE
            - SHOW_INVENTORY_EXPENSES
            - SHOW_INVENTORY_VALUE
            - ALLOW_KORONA_INTEGRATION_LOGIN
            - EDIT_DISCOUNT_LEVEL_CONFIGURATION
  ResultListUserRole:
    type: object
    required:
      - currentPage
      - links
      - pagesTotal
      - results
      - resultsOfPage
      - resultsTotal
    properties:
      currentPage:
        type: integer
        format: int32
        description: number of the current page, starting from 1
      links:
        type: object
        description: navigation links (previous, self, next)
        additionalProperties:
          type: string
      pagesTotal:
        type: integer
        format: int32
        description: pages count total
      results:
        type: array
        description: result list
        items:
          $ref: '#/definitions/UserRole'
      resultsOfPage:
        type: integer
        format: int32
        description: result count of the current page
      resultsTotal:
        type: integer
        format: int32
        description: result count total
